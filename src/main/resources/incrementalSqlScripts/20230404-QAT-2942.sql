CREATE TABLE `fasp`.`rm_integration_manual` (
  `MANUAL_INTEGRATION_ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `PROGRAM_ID` INT UNSIGNED NOT NULL,
  `VERSION_ID` INT UNSIGNED NOT NULL,
  `INTEGRATION_ID` INT UNSIGNED NOT NULL,
  `CREATED_BY` INT UNSIGNED NOT NULL,
  `CREATED_DATE` DATETIME NOT NULL,
  `COMPLETED_DATE` DATETIME NULL,
  PRIMARY KEY (`MANUAL_INTEGRATION_ID`),
  INDEX `fk_rm_integration_manual_programId_idx` (`PROGRAM_ID` ASC) VISIBLE,
  INDEX `fk_rm_integration_manual_versionId_idx` (`PROGRAM_ID` ASC, `VERSION_ID` ASC) VISIBLE,
  INDEX `fk_rm_integration_manual_integrationId_idx` (`INTEGRATION_ID` ASC) VISIBLE,
  INDEX `fk_rm_integration_manual_createdBy_idx` (`CREATED_BY` ASC) VISIBLE,
  CONSTRAINT `fk_rm_integration_manual_programId`
    FOREIGN KEY (`PROGRAM_ID`)
    REFERENCES `fasp`.`rm_program` (`PROGRAM_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_rm_integration_manual_versionId`
    FOREIGN KEY (`PROGRAM_ID` , `VERSION_ID`)
    REFERENCES `fasp`.`rm_program_version` (`PROGRAM_ID` , `VERSION_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_rm_integration_manual_integrationId`
    FOREIGN KEY (`INTEGRATION_ID`)
    REFERENCES `fasp`.`ap_integration` (`INTEGRATION_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_rm_integration_manual_createdBy`
    FOREIGN KEY (`CREATED_BY`)
    REFERENCES `fasp`.`us_user` (`USER_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


USE `fasp`;
DROP procedure IF EXISTS `getManualJsonPushReport`;

USE `fasp`;
DROP procedure IF EXISTS `fasp`.`getManualJsonPushReport`;
;

DELIMITER $$
USE `fasp`$$
CREATE DEFINER=`faspUser`@`%` PROCEDURE `getManualJsonPushReport`(VAR_START_DATE DATETIME, VAR_STOP_DATE DATETIME, VAR_REALM_COUNTRY_IDS TEXT, VAR_PROGRAM_IDS TEXT)
BEGIN
	SET @startDate = VAR_START_DATE;
    SET @stopDate = VAR_STOP_DATE;
    SET @realmCountryIds = VAR_REALM_COUNTRY_IDS;
    SET @programIds = VAR_PROGRAM_IDS;
          
    SELECT 	
		im.MANUAL_INTEGRATION_ID,     
		p.PROGRAM_ID, p.PROGRAM_CODE, p.LABEL_ID `PROGRAM_LABEL_ID`, p.LABEL_EN `PROGRAM_LABEL_EN`, p.LABEL_FR `PROGRAM_LABEL_FR`, p.LABEL_SP `PROGRAM_LABEL_SP`, p.LABEL_PR `PROGRAM_LABEL_PR`,     
		im.VERSION_ID, i.INTEGRATION_ID, i.INTEGRATION_NAME, iv.INTEGRATION_VIEW_ID, iv.INTEGRATION_VIEW_DESC, iv.INTEGRATION_VIEW_NAME, i.FOLDER_LOCATION, i.FILE_NAME,     
		cb.USER_ID `CB_USER_ID`, cb.USERNAME `CB_USERNAME`, im.CREATED_DATE, im.COMPLETED_DATE 
	FROM rm_integration_manual im 
	LEFT JOIN vw_program p ON im.PROGRAM_ID=p.PROGRAM_ID 
	LEFT JOIN ap_integration i ON im.INTEGRATION_ID=i.INTEGRATION_ID 
	LEFT JOIN us_user cb ON im.CREATED_BY=cb.USER_ID 
	LEFT JOIN ap_integration_view iv ON i.INTEGRATION_VIEW_ID=iv.INTEGRATION_VIEW_ID  
	WHERE 
		im.CREATED_DATE BETWEEN @startDate AND @stopDate 
		AND (LENGTH(@realmCountryIds)=0 OR FIND_IN_SET(p.REALM_COUNTRY_ID, @realmCountryIds)) 
		AND (LENGTH(@programIds)=0 OR FIND_IN_SET(p.PROGRAM_ID, @programIds));
END$$

DELIMITER ;
;



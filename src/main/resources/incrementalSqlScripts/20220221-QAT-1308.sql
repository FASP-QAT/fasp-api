DROP TABLE IF EXISTS log;
DROP TABLE IF EXISTS rm_erp_shipment_consolidated;
DROP TABLE IF EXISTS rm_erp_order_consolidated;
DROP TABLE IF EXISTS rm_erp_shipment_linking;
CREATE TABLE `log` (
  `LOG_ID` int unsigned NOT NULL AUTO_INCREMENT,
  `UPDATED_DATE` datetime NOT NULL,
  `DESC` varchar(200) NOT NULL,
  PRIMARY KEY (`LOG_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;


CREATE TABLE `rm_erp_order_consolidated` (
  `ERP_ORDER_ID` int unsigned NOT NULL,
  `RO_NO` varchar(15) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `RO_PRIME_LINE_NO` int unsigned NOT NULL,
  `ORDER_NO` varchar(15) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `PRIME_LINE_NO` int DEFAULT NULL,
  `ORDER_TYPE` varchar(2) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `CREATED_DATE` datetime NOT NULL,
  `PARENT_RO` varchar(15) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `PARENT_CREATED_DATE` datetime DEFAULT NULL,
  `PLANNING_UNIT_SKU_CODE` varchar(13) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `PROCUREMENT_UNIT_SKU_CODE` varchar(16) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `QTY` bigint unsigned NOT NULL,
  `ORDERD_DATE` date DEFAULT NULL,
  `CURRENT_ESTIMATED_DELIVERY_DATE` date DEFAULT NULL,
  `REQ_DELIVERY_DATE` date DEFAULT NULL,
  `AGREED_DELIVERY_DATE` date DEFAULT NULL,
  `SUPPLIER_NAME` varchar(100) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `PRICE` decimal(14,4) NOT NULL,
  `SHIPPING_COST` decimal(14,4) DEFAULT NULL,
  `SHIP_BY` varchar(10) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `RECPIENT_NAME` varchar(100) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `RECPIENT_COUNTRY` varchar(100) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `STATUS` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `CHANGE_CODE` int unsigned NOT NULL,
  `PROCUREMENT_AGENT_ID` int unsigned NOT NULL,
  `LAST_MODIFIED_DATE` datetime NOT NULL,
  `VERSION_ID` int DEFAULT NULL,
  `PROGRAM_ID` int unsigned DEFAULT NULL,
  `SHIPMENT_ID` int unsigned DEFAULT NULL,
  `FILE_NAME` varchar(45) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `ACTIVE` tinyint unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`ERP_ORDER_ID`),
  UNIQUE KEY `unq_erp_order_consolidated_orderNo_primeLineNo` (`ORDER_NO`,`PRIME_LINE_NO`),
  KEY `idx_erp_order_consolidated_orderNo` (`ORDER_NO`),
  KEY `idx_erp_order_consolidated_primeLineNo` (`PRIME_LINE_NO`),
  KEY `idx_erp_order_consolidated_planningUnitSkuCode` (`PLANNING_UNIT_SKU_CODE`),
  KEY `idx_erp_order_consolidated_procurementUnitSkuCode` (`PROCUREMENT_UNIT_SKU_CODE`),
  KEY `idx_erp_order_consolidated_recipientCountry` (`RECPIENT_COUNTRY`),
  KEY `idx_erp_order_consolidated_status` (`STATUS`),
  KEY `fk_erp_order_consolidated_procurementAgentId_idx` (`PROCUREMENT_AGENT_ID`),
  KEY `fk_rm_erp_order_consolidated_programId_idx` (`PROGRAM_ID`),
  KEY `fk_rm_erp_order_consolidated_shipmentId_idx` (`SHIPMENT_ID`),
  KEY `idx_erp_order_consolidated_fileName` (`FILE_NAME`),
  KEY `idx_erp_order_consolidated_active` (`ACTIVE`),
  CONSTRAINT `fk_erp_order_consolidated_procurementAgentId` FOREIGN KEY (`PROCUREMENT_AGENT_ID`) REFERENCES `rm_procurement_agent` (`PROCUREMENT_AGENT_ID`),
  CONSTRAINT `fk_rm_erp_order_consolidated_programId` FOREIGN KEY (`PROGRAM_ID`) REFERENCES `rm_program` (`PROGRAM_ID`),
  CONSTRAINT `fk_rm_erp_order_consolidated_shipmentId` FOREIGN KEY (`SHIPMENT_ID`) REFERENCES `rm_shipment` (`SHIPMENT_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;


CREATE TABLE `rm_erp_shipment_consolidated` (
  `ERP_SHIPMENT_ID` int unsigned NOT NULL AUTO_INCREMENT,
  `ERP_ORDER_ID` int unsigned DEFAULT NULL,
  `KN_SHIPMENT_NO` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `ORDER_NO` varchar(15) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `PRIME_LINE_NO` int NOT NULL,
  `BATCH_NO` varchar(25) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `EXPIRY_DATE` date DEFAULT NULL,
  `PROCUREMENT_UNIT_SKU_CODE` varchar(15) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `SHIPPED_QTY` int DEFAULT NULL,
  `DELIVERED_QTY` bigint DEFAULT NULL,
  `ACTUAL_SHIPMENT_DATE` date DEFAULT NULL,
  `ACTUAL_DELIVERY_DATE` date DEFAULT NULL,
  `ARRIVAL_AT_DESTINATION_DATE` date DEFAULT NULL,
  `STATUS` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `CHANGE_CODE` int unsigned NOT NULL,
  `LAST_MODIFIED_DATE` datetime NOT NULL,
  `FILE_NAME` varchar(45) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `ACTIVE` tinyint unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`ERP_SHIPMENT_ID`),
  UNIQUE KEY `index9` (`KN_SHIPMENT_NO`,`ORDER_NO`,`PRIME_LINE_NO`,`BATCH_NO`),
  KEY `idx_erp_shipment_consolidated_active` (`ACTIVE`),
  KEY `idx_erp_shipment_consolidated_orderNo` (`ORDER_NO`),
  KEY `idx_erp_shipment_consolidated_primeLineNo` (`PRIME_LINE_NO`),
  KEY `idx_erp_shipment_consolidated_knShipmentNo` (`KN_SHIPMENT_NO`),
  KEY `idx_erp_shipment_consolidated_batchNo` (`BATCH_NO`),
  KEY `idx_erp_shipment_consolidated_erpOrderId_idx` (`ERP_ORDER_ID`),
  KEY `idx_erp_shipment_consolidated_fileName` (`FILE_NAME`),
  CONSTRAINT `fk_rm_erp_shipment_consolidated_erpOrderId` FOREIGN KEY (`ERP_ORDER_ID`) REFERENCES `rm_erp_order_consolidated` (`ERP_ORDER_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;


USE `fasp`;
DROP procedure IF EXISTS `buildErpOrder`;

DELIMITER $$
USE `fasp`$$
CREATE DEFINER=`faspUser`@`%` PROCEDURE `buildErpOrder`(VAR_DT VARCHAR(10))
BEGIN
	DECLARE VAR_FINISHED INTEGER DEFAULT 0;
	DECLARE VAR_FILE_NAME varchar(45) DEFAULT "";

	
	DEClARE curErpOrder CURSOR FOR 
		SELECT DISTINCT eo.FILE_NAME FROM rm_erp_order eo WHERE eo.FILE_NAME!='QATDefault' AND eo.FILE_NAME>=CONCAT('order_data_',VAR_DT,'.xml') group by eo.FILE_NAME;

	-- declare NOT FOUND handler
	DECLARE CONTINUE HANDLER 
        FOR NOT FOUND SET VAR_FINISHED = 1;
	OPEN curErpOrder;
    INSERT INTO log VALUES (null, now(), "Starting buildErpOrder");
    getFileName: LOOP
		FETCH curErpOrder INTO VAR_FILE_NAME;
		IF VAR_FINISHED = 1 THEN 
			LEAVE getFileName;
		END IF;
        INSERT INTO log VALUES (null, now(), CONCAT("Starting loop for ",VAR_FILE_NAME));
		-- Do work
        -- First complete all Inserts
        INSERT IGNORE INTO rm_erp_order_consolidated 
			(`ERP_ORDER_ID`, `RO_NO`, `RO_PRIME_LINE_NO`, `ORDER_NO`, `PRIME_LINE_NO`, 
            `ORDER_TYPE`, `CREATED_DATE`, `PARENT_RO`, `PARENT_CREATED_DATE`, `PLANNING_UNIT_SKU_CODE`,
            `PROCUREMENT_UNIT_SKU_CODE`, `QTY`, `ORDERD_DATE`, `CURRENT_ESTIMATED_DELIVERY_DATE`, `REQ_DELIVERY_DATE`,
            `AGREED_DELIVERY_DATE`, `SUPPLIER_NAME`, `PRICE`, `SHIPPING_COST`, `SHIP_BY`, 
            `RECPIENT_NAME`, `RECPIENT_COUNTRY`, `STATUS`, `CHANGE_CODE`, `PROCUREMENT_AGENT_ID`, 
            `LAST_MODIFIED_DATE`, `FILE_NAME`, `ACTIVE`)
			SELECT 
				`ERP_ORDER_ID`, `RO_NO`, `RO_PRIME_LINE_NO`, `ORDER_NO`, `PRIME_LINE_NO`, 
				`ORDER_TYPE`, `CREATED_DATE`, `PARENT_RO`, `PARENT_CREATED_DATE`, `PLANNING_UNIT_SKU_CODE`,
				`PROCUREMENT_UNIT_SKU_CODE`, `QTY`, `ORDERD_DATE`, `CURRENT_ESTIMATED_DELIVERY_DATE`, `REQ_DELIVERY_DATE`,
				`AGREED_DELIVERY_DATE`, `SUPPLIER_NAME`, `PRICE`, `SHIPPING_COST`, `SHIP_BY`, 
				`RECPIENT_NAME`, `RECPIENT_COUNTRY`, `STATUS`, `CHANGE_CODE`, `PROCUREMENT_AGENT_ID`, 
				`LAST_MODIFIED_DATE`, `FILE_NAME`, 1 
			FROM rm_erp_order WHERE FILE_NAME=VAR_FILE_NAME;
		INSERT INTO log VALUES (null, now(), CONCAT(ROW_COUNT(), "-Inserts done"));
        -- Now Update all the Updates
        UPDATE 
			rm_erp_order_consolidated eoc 
        LEFT JOIN (SELECT eo2.* FROM (SELECT MAX(ERP_ORDER_ID) `ERP_ORDER_ID` FROM rm_erp_order WHERE FILE_NAME=VAR_FILE_NAME group by ORDER_NO, PRIME_LINE_NO) AS eo1 LEFT JOIN rm_erp_order eo2 ON eo1.ERP_ORDER_ID=eo2.ERP_ORDER_ID) AS eo ON eo.ORDER_NO=eoc.ORDER_NO and eo.PRIME_LINE_NO=eoc.PRIME_LINE_NO
        SET 
			eoc.`RO_NO`=eo.`RO_NO`, 
            eoc.`RO_PRIME_LINE_NO`=eo.`RO_PRIME_LINE_NO`, 
            eoc.`ORDER_NO`=eo.`ORDER_NO`, 
            eoc.`PRIME_LINE_NO`=eo.`PRIME_LINE_NO`, 
			eoc.`ORDER_TYPE`=eo.`ORDER_TYPE`, 
            eoc.`CREATED_DATE`=eo.`CREATED_DATE`, 
            eoc.`PARENT_RO`=eo.`PARENT_RO`, 
            eoc.`PARENT_CREATED_DATE`=eo.`PARENT_CREATED_DATE`, 
            eoc.`PLANNING_UNIT_SKU_CODE`=eo.`PLANNING_UNIT_SKU_CODE`,
            eoc.`PROCUREMENT_UNIT_SKU_CODE`=eo.`PROCUREMENT_UNIT_SKU_CODE`, 
            eoc.`QTY`=eo.`QTY`, 
            eoc.`ORDERD_DATE`=eo.`ORDERD_DATE`, 
            eoc.`CURRENT_ESTIMATED_DELIVERY_DATE`=eo.`CURRENT_ESTIMATED_DELIVERY_DATE`, 
            eoc.`REQ_DELIVERY_DATE`=eo.`REQ_DELIVERY_DATE`,
            eoc.`AGREED_DELIVERY_DATE`=eo.`AGREED_DELIVERY_DATE`, 
            eoc.`SUPPLIER_NAME`=eo.`SUPPLIER_NAME`, 
            eoc.`PRICE`=eo.`PRICE`, 
            eoc.`SHIPPING_COST`=eo.`SHIPPING_COST`, 
            eoc.`SHIP_BY`=eo.`SHIP_BY`, 
            eoc.`RECPIENT_NAME`=eo.`RECPIENT_NAME`, 
            eoc.`RECPIENT_COUNTRY`=eo.`RECPIENT_COUNTRY`, 
            eoc.`STATUS`=eo.`STATUS`, 
            eoc.`CHANGE_CODE`=eo.`CHANGE_CODE`, 
            eoc.`PROCUREMENT_AGENT_ID`=eo.`PROCUREMENT_AGENT_ID`, 
            eoc.`LAST_MODIFIED_DATE`=eo.`LAST_MODIFIED_DATE`, 
            eoc.`FILE_NAME`=eo.`FILE_NAME`,
            eoc.ACTIVE=IF(eo.`CHANGE_CODE`=2,0,1)
            WHERE eo.ERP_ORDER_ID IS NOT NULL;
        INSERT INTO log VALUES (null, now(), CONCAT(ROW_COUNT(), "-Updates and Deletes done"));
	END LOOP getFileName;
END$$

DELIMITER ;



USE `fasp`;
DROP procedure IF EXISTS `buildErpShipment`;

DELIMITER $$
USE `fasp`$$
CREATE DEFINER=`faspUser`@`%` PROCEDURE `buildErpShipment`(VAR_DT VARCHAR(10))
BEGIN
	DECLARE VAR_FINISHED INTEGER DEFAULT 0;
	DECLARE VAR_FILE_NAME varchar(45) DEFAULT "";

	DEClARE curErpShipment CURSOR FOR 
		SELECT DISTINCT eo.FILE_NAME FROM rm_erp_shipment eo WHERE eo.FILE_NAME!='QATDefault' AND eo.FILE_NAME>=CONCAT('shipment_data_',VAR_DT,'.xml') group by eo.FILE_NAME;

	-- declare NOT FOUND handler
	DECLARE CONTINUE HANDLER 
        FOR NOT FOUND SET VAR_FINISHED = 1;
	OPEN curErpShipment;
    INSERT INTO log VALUES (null, now(), "Starting buildErpShipment");
    getFileName: LOOP
		FETCH curErpShipment INTO VAR_FILE_NAME;
		IF VAR_FINISHED = 1 THEN 
			LEAVE getFileName;
		END IF;
        INSERT INTO log VALUES (null, now(), CONCAT("Starting loop for ",VAR_FILE_NAME));
		-- Do work
        -- First complete all Inserts
        INSERT IGNORE INTO rm_erp_shipment_consolidated 
			(`ERP_SHIPMENT_ID`, `ERP_ORDER_ID`, `KN_SHIPMENT_NO`, `ORDER_NO`, `PRIME_LINE_NO`, 
            `BATCH_NO`, `EXPIRY_DATE`, `PROCUREMENT_UNIT_SKU_CODE`, `SHIPPED_QTY`, `DELIVERED_QTY`, 
            `ACTUAL_SHIPMENT_DATE`, `ACTUAL_DELIVERY_DATE`, `ARRIVAL_AT_DESTINATION_DATE`, `STATUS`, `CHANGE_CODE`, 
            `LAST_MODIFIED_DATE`, `FILE_NAME`, `ACTIVE`)
			SELECT 
				es.`ERP_SHIPMENT_ID`, eoc.`ERP_ORDER_ID`, es.`KN_SHIPMENT_NO`, es.`ORDER_NO`, es.`PRIME_LINE_NO`, 
				es.`BATCH_NO`, es.`EXPIRY_DATE`, es.`PROCUREMENT_UNIT_SKU_CODE`, es.`SHIPPED_QTY`, es.`DELIVERED_QTY`, 
				es.`ACTUAL_SHIPMENT_DATE`, es.`ACTUAL_DELIVERY_DATE`, es.`ARRIVAL_AT_DESTINATION_DATE`, es.`STATUS`, es.`CHANGE_CODE`, 
				es.`LAST_MODIFIED_DATE`, es.`FILE_NAME`, 1
			FROM rm_erp_shipment es LEFT JOIN rm_erp_order_consolidated eoc ON es.ORDER_NO=eoc.ORDER_NO and es.PRIME_LINE_NO=eoc.PRIME_LINE_NO WHERE es.FILE_NAME=VAR_FILE_NAME;
		INSERT INTO log VALUES (null, now(), CONCAT(ROW_COUNT(), "-Inserts done"));
        -- Now Update all the Updates
        UPDATE 
			rm_erp_shipment_consolidated eoc 
        LEFT JOIN (SELECT eo2.* FROM (SELECT MAX(ERP_SHIPMENT_ID) `ERP_SHIPMENT_ID` FROM rm_erp_shipment WHERE FILE_NAME=VAR_FILE_NAME group by ORDER_NO, PRIME_LINE_NO, KN_SHIPMENT_NO, BATCH_NO) AS eo1 LEFT JOIN rm_erp_shipment eo2 ON eo1.ERP_SHIPMENT_ID=eo2.ERP_SHIPMENT_ID) AS eo ON eo.ORDER_NO=eoc.ORDER_NO and eo.PRIME_LINE_NO=eoc.PRIME_LINE_NO and eo.KN_SHIPMENT_NO=eoc.KN_SHIPMENT_NO and eo.BATCH_NO=eoc.BATCH_NO
        SET 
			eoc.`EXPIRY_DATE`=eo.`EXPIRY_DATE`,
            eoc.`PROCUREMENT_UNIT_SKU_CODE`=eo.`PROCUREMENT_UNIT_SKU_CODE`, 
            eoc.`SHIPPED_QTY`=eo.`SHIPPED_QTY`, 
            eoc.`DELIVERED_QTY`=eo.`DELIVERED_QTY`,
            eoc.`ACTUAL_SHIPMENT_DATE`=eo.`ACTUAL_SHIPMENT_DATE`, 
            eoc.`ACTUAL_DELIVERY_DATE`=eo.`ACTUAL_DELIVERY_DATE`, 
            eoc.`ARRIVAL_AT_DESTINATION_DATE`=eo.`ARRIVAL_AT_DESTINATION_DATE`, 
            eoc.`STATUS`=eo.`STATUS`, 
            eoc.`CHANGE_CODE`=eo.`CHANGE_CODE`, 
            eoc.`LAST_MODIFIED_DATE`=eo.`LAST_MODIFIED_DATE`, 
            eoc.`FILE_NAME`=eo.`FILE_NAME`, 
            eoc.`ACTIVE`=IF(eo.`CHANGE_CODE`=2,0,1)
            WHERE eo.ERP_SHIPMENT_ID IS NOT NULL;
        INSERT INTO log VALUES (null, now(), CONCAT(ROW_COUNT(), "-Updates and Deletes done"));
	END LOOP getFileName;
END$$

DELIMITER ;


USE `fasp`;
DROP procedure IF EXISTS `getShipmentListForManualLinking`;

USE `fasp`;
DROP procedure IF EXISTS `fasp`.`getShipmentListForManualLinking`;
;

DELIMITER $$
USE `fasp`$$
CREATE DEFINER=`faspUser`@`%` PROCEDURE `getShipmentListForManualLinking`(PROGRAM_ID INT(10), PLANNING_UNIT_ID TEXT, VERSION_ID INT (10))
BEGIN
    SET @programId = PROGRAM_ID;
    SET @planningUnitIds = PLANNING_UNIT_ID;
    SET @procurementAgentId = 1;
    SET @versionId = VERSION_ID;
    IF @versionId = -1 THEN
        SELECT MAX(pv.VERSION_ID) INTO @versionId FROM rm_program_version pv WHERE pv.PROGRAM_ID=@programId;
    END IF;
   
SELECT
        st.SHIPMENT_ID, st.SHIPMENT_TRANS_ID, st.SHIPMENT_QTY, st.EXPECTED_DELIVERY_DATE, st.PRODUCT_COST, st.SKU_CODE,
        st.PROCUREMENT_AGENT_ID, st.PROCUREMENT_AGENT_CODE, st.`COLOR_HTML_CODE`, st.`PROCUREMENT_AGENT_LABEL_ID`, st.`PROCUREMENT_AGENT_LABEL_EN`, st.`PROCUREMENT_AGENT_LABEL_FR`, st.`PROCUREMENT_AGENT_LABEL_SP`, st.`PROCUREMENT_AGENT_LABEL_PR`,
        st.FUNDING_SOURCE_ID, st.FUNDING_SOURCE_CODE, st.`FUNDING_SOURCE_LABEL_ID`, st.`FUNDING_SOURCE_LABEL_EN`, st.`FUNDING_SOURCE_LABEL_FR`, st.`FUNDING_SOURCE_LABEL_SP`, st.`FUNDING_SOURCE_LABEL_PR`,
        st.BUDGET_ID, st.BUDGET_CODE, st.`BUDGET_LABEL_ID`, st.`BUDGET_LABEL_EN`, st.`BUDGET_LABEL_FR`, st.`BUDGET_LABEL_SP`, st.`BUDGET_LABEL_PR`,
        st.SHIPMENT_STATUS_ID, st.`SHIPMENT_STATUS_LABEL_ID`, st.`SHIPMENT_STATUS_LABEL_EN`, st.`SHIPMENT_STATUS_LABEL_FR`, st.`SHIPMENT_STATUS_LABEL_SP`, st.`SHIPMENT_STATUS_LABEL_PR`,
        st.PLANNING_UNIT_ID, st.`PLANNING_UNIT_LABEL_ID`, st.`PLANNING_UNIT_LABEL_EN`, st.`PLANNING_UNIT_LABEL_FR`, st.`PLANNING_UNIT_LABEL_SP`, st.`PLANNING_UNIT_LABEL_PR`,
        st.ORDER_NO, st.PRIME_LINE_NO,st.`NOTES`
FROM (
        SELECT
            s.SHIPMENT_ID, COALESCE(st.RECEIVED_DATE, st.EXPECTED_DELIVERY_DATE) AS EXPECTED_DELIVERY_DATE,st.SHIPMENT_QTY, st.RATE, st.PRODUCT_COST, st.FREIGHT_COST, st.ACCOUNT_FLAG, st.SHIPMENT_TRANS_ID, papu.SKU_CODE,
            pa.`PROCUREMENT_AGENT_ID`, pa.`PROCUREMENT_AGENT_CODE`, pa.`COLOR_HTML_CODE`, pa.`LABEL_ID` `PROCUREMENT_AGENT_LABEL_ID`, pa.`LABEL_EN` `PROCUREMENT_AGENT_LABEL_EN`, pa.LABEL_FR `PROCUREMENT_AGENT_LABEL_FR`, pa.LABEL_SP `PROCUREMENT_AGENT_LABEL_SP`, pa.LABEL_PR `PROCUREMENT_AGENT_LABEL_PR`,
            fs.`FUNDING_SOURCE_ID`, fs.`FUNDING_SOURCE_CODE`, fs.LABEL_ID `FUNDING_SOURCE_LABEL_ID`, fs.LABEL_EN `FUNDING_SOURCE_LABEL_EN`, fs.LABEL_FR `FUNDING_SOURCE_LABEL_FR`, fs.LABEL_SP `FUNDING_SOURCE_LABEL_SP`, fs.LABEL_PR `FUNDING_SOURCE_LABEL_PR`,
            shs.SHIPMENT_STATUS_ID, shs.LABEL_ID `SHIPMENT_STATUS_LABEL_ID`, shs.LABEL_EN `SHIPMENT_STATUS_LABEL_EN`, shs.LABEL_FR `SHIPMENT_STATUS_LABEL_FR`, shs.LABEL_SP `SHIPMENT_STATUS_LABEL_SP`, shs.LABEL_PR `SHIPMENT_STATUS_LABEL_PR`,
            sc.CURRENCY_ID `SHIPMENT_CURRENCY_ID`, sc.`CURRENCY_CODE` `SHIPMENT_CURRENCY_CODE`, s.CONVERSION_RATE_TO_USD `SHIPMENT_CONVERSION_RATE_TO_USD`,
            sc.LABEL_ID `SHIPMENT_CURRENCY_LABEL_ID`, sc.LABEL_EN `SHIPMENT_CURRENCY_LABEL_EN`, sc.LABEL_FR `SHIPMENT_CURRENCY_LABEL_FR`, sc.LABEL_SP `SHIPMENT_CURRENCY_LABEL_SP`, sc.LABEL_PR `SHIPMENT_CURRENCY_LABEL_PR`,
            st.ACTIVE, st.`ORDER_NO`, st.`PRIME_LINE_NO`,
            b.BUDGET_ID, b.BUDGET_CODE, b.LABEL_ID `BUDGET_LABEL_ID`, b.LABEL_EN `BUDGET_LABEL_EN`, b.LABEL_FR `BUDGET_LABEL_FR`, b.LABEL_SP `BUDGET_LABEL_SP`, b.LABEL_PR `BUDGET_LABEL_PR`,
            st.PLANNING_UNIT_ID, pu.LABEL_ID `PLANNING_UNIT_LABEL_ID`, pu.LABEL_EN `PLANNING_UNIT_LABEL_EN`, pu.LABEL_FR `PLANNING_UNIT_LABEL_FR`, pu.LABEL_SP `PLANNING_UNIT_LABEL_SP`, pu.LABEL_PR `PLANNING_UNIT_LABEL_PR`,st.`NOTES`
FROM (
    SELECT st.SHIPMENT_ID, MAX(st.VERSION_ID) MAX_VERSION_ID FROM rm_shipment s LEFT JOIN rm_shipment_trans st ON s.SHIPMENT_ID=st.SHIPMENT_ID WHERE (@versiONId=-1 OR st.VERSION_ID<=@versiONId) AND s.PROGRAM_ID=@programId GROUP BY st.SHIPMENT_ID
) ts
    LEFT JOIN rm_shipment s ON ts.SHIPMENT_ID=s.SHIPMENT_ID
    LEFT JOIN rm_shipment_trans st ON ts.SHIPMENT_ID=st.SHIPMENT_ID AND ts.MAX_VERSION_ID=st.VERSION_ID
    LEFT JOIN vw_planning_unit pu ON st.PLANNING_UNIT_ID=pu.PLANNING_UNIT_ID
    LEFT JOIN vw_procurement_agent pa ON st.PROCUREMENT_AGENT_ID=pa.PROCUREMENT_AGENT_ID
    LEFT JOIN vw_funding_source fs ON st.FUNDING_SOURCE_ID=fs.FUNDING_SOURCE_ID
    LEFT JOIN vw_shipment_status shs ON st.SHIPMENT_STATUS_ID=shs.SHIPMENT_STATUS_ID
    LEFT JOIN vw_currency sc ON s.CURRENCY_ID=sc.CURRENCY_ID
    LEFT JOIN vw_budget b ON st.BUDGET_ID=b.BUDGET_ID
    LEFT JOIN rm_manual_tagging mt ON mt.SHIPMENT_ID=ts.SHIPMENT_ID AND mt.ACTIVE
    LEFT JOIN rm_procurement_agent_planning_unit papu ON papu.PROCUREMENT_AGENT_ID=pa.PROCUREMENT_AGENT_ID AND papu.PLANNING_UNIT_ID=st.PLANNING_UNIT_ID
    WHERE st.ERP_FLAG=0 AND st.ACTIVE AND st.ACCOUNT_FLAG AND st.SHIPMENT_STATUS_ID IN (3,4,5,6,9,7) AND (LENGTH(@planningUnitIds)=0 OR FIND_IN_SET(st.PLANNING_UNIT_ID,@planningUnitIds))   AND (mt.SHIPMENT_ID IS NULL OR mt.ACTIVE=0) AND st.PROCUREMENT_AGENT_ID=@procurementAgentId
) st  
WHERE
IF(st.EXPECTED_DELIVERY_DATE < CURDATE() - INTERVAL 6 MONTH, st.SHIPMENT_STATUS_ID!=7 , st.SHIPMENT_STATUS_ID IN (3,4,5,6,9,7))
ORDER BY st.EXPECTED_DELIVERY_DATE aSC;
END$$

DELIMITER ;
;

USE `fasp`;
DROP procedure IF EXISTS `getNotLinkedQatShipments`;

USE `fasp`;
DROP procedure IF EXISTS `fasp`.`getNotLinkedQatShipments`;
;

DELIMITER $$
USE `fasp`$$
CREATE DEFINER=`faspUser`@`%` PROCEDURE `getNotLinkedQatShipments`(VAR_PROGRAM_ID INT(10), VAR_VERSION_ID INT (10), VAR_PROCUREMENT_AGENT_ID INT (10),VAR_PLANNING_UNIT_IDS TEXT)
BEGIN
    SET @programId = VAR_PROGRAM_ID;
    SET @versionId = VAR_VERSION_ID;
    SET @procurementAgentId = VAR_PROCUREMENT_AGENT_ID;
    SET @shipmentActive = 1;
    SET @planningUnitActive = 1;
    SET @planningUnitIds = VAR_PLANNING_UNIT_IDS;
    SET @sql1 = "";	
    IF @versionId = -1 THEN
        SELECT MAX(pv.VERSION_ID) INTO @versionId FROM rm_program_version pv WHERE pv.PROGRAM_ID=@programId;
    END IF;
      
    SELECT 
        st.*, stbi.SHIPMENT_TRANS_BATCH_INFO_ID, stbi.BATCH_ID, bi.PLANNING_UNIT_ID `BATCH_PLANNING_UNIT_ID`, bi.BATCH_NO, bi.AUTO_GENERATED, bi.EXPIRY_DATE, bi.CREATED_DATE `BATCH_CREATED_DATE`, stbi.BATCH_SHIPMENT_QTY `BATCH_SHIPMENT_QTY` 
    FROM (
        SELECT
            s.SHIPMENT_ID, s.PARENT_SHIPMENT_ID, st.EXPECTED_DELIVERY_DATE, st.PLANNED_DATE, st.SUBMITTED_DATE, st.APPROVED_DATE, st.SHIPPED_DATE, st.ARRIVED_DATE, st.RECEIVED_DATE, st.SHIPMENT_QTY, pu.MULTIPLIER `CONVERSION_FACTOR`, st.RATE, st.PRODUCT_COST, st.FREIGHT_COST, st.SHIPMENT_MODE, s.SUGGESTED_QTY, st.ACCOUNT_FLAG, st.ERP_FLAG, st.ORDER_NO, st.PRIME_LINE_NO, st.VERSION_ID, st.NOTES, st.SHIPMENT_TRANS_ID, 
            p.PROGRAM_ID, p.LABEL_ID `PROGRAM_LABEL_ID`, p.LABEL_EN `PROGRAM_LABEL_EN`, p.LABEL_FR `PROGRAM_LABEL_FR`, p.LABEL_SP `PROGRAM_LABEL_SP`, p.LABEL_PR `PROGRAM_LABEL_PR`,
            pa.PROCUREMENT_AGENT_ID, pa.PROCUREMENT_AGENT_CODE, pa.`COLOR_HTML_CODE`, pa.LABEL_ID `PROCUREMENT_AGENT_LABEL_ID`, pa.LABEL_EN `PROCUREMENT_AGENT_LABEL_EN`, pa.LABEL_FR `PROCUREMENT_AGENT_LABEL_FR`, pa.LABEL_SP `PROCUREMENT_AGENT_LABEL_SP`, pa.LABEL_PR `PROCUREMENT_AGENT_LABEL_PR`,
            pu.PLANNING_UNIT_ID, pu.LABEL_ID `PLANNING_UNIT_LABEL_ID`, pu.LABEL_EN `PLANNING_UNIT_LABEL_EN`, pu.LABEL_FR `PLANNING_UNIT_LABEL_FR`, pu.LABEL_SP `PLANNING_UNIT_LABEL_SP`, pu.LABEL_PR `PLANNING_UNIT_LABEL_PR`,
            fu.FORECASTING_UNIT_ID, fu.LABEL_ID `FORECASTING_UNIT_LABEL_ID`, fu.LABEL_EN `FORECASTING_UNIT_LABEL_EN`, fu.LABEL_FR `FORECASTING_UNIT_LABEL_FR`, fu.LABEL_SP `FORECASTING_UNIT_LABEL_SP`, fu.LABEL_PR `FORECASTING_UNIT_LABEL_PR`,
            pc.PRODUCT_CATEGORY_ID, pc.LABEL_ID `PRODUCT_CATEGORY_LABEL_ID`, pc.LABEL_EN `PRODUCT_CATEGORY_LABEL_EN`, pc.LABEL_FR `PRODUCT_CATEGORY_LABEL_FR`, pc.LABEL_SP `PRODUCT_CATEGORY_LABEL_SP`, pc.LABEL_PR `PRODUCT_CATEGORY_LABEL_PR`,
            pru.PROCUREMENT_UNIT_ID, pru.LABEL_ID `PROCUREMENT_UNIT_LABEL_ID`, pru.LABEL_EN `PROCUREMENT_UNIT_LABEL_EN`, pru.LABEL_FR `PROCUREMENT_UNIT_LABEL_FR`, pru.LABEL_SP `PROCUREMENT_UNIT_LABEL_SP`, pru.LABEL_PR `PROCUREMENT_UNIT_LABEL_PR`,
            su.SUPPLIER_ID, su.LABEL_ID `SUPPLIER_LABEL_ID`, su.LABEL_EN `SUPPLIER_LABEL_EN`, su.LABEL_FR `SUPPLIER_LABEL_FR`, su.LABEL_SP `SUPPLIER_LABEL_SP`, su.LABEL_PR `SUPPLIER_LABEL_PR`,
            shs.SHIPMENT_STATUS_ID, shs.LABEL_ID `SHIPMENT_STATUS_LABEL_ID`, shs.LABEL_EN `SHIPMENT_STATUS_LABEL_EN`, shs.LABEL_FR `SHIPMENT_STATUS_LABEL_FR`, shs.LABEL_SP `SHIPMENT_STATUS_LABEL_SP`, shs.LABEL_PR `SHIPMENT_STATUS_LABEL_PR`,
            ds.DATA_SOURCE_ID, ds.LABEL_ID `DATA_SOURCE_LABEL_ID`, ds.LABEL_EN `DATA_SOURCE_LABEL_EN`, ds.LABEL_FR `DATA_SOURCE_LABEL_FR`, ds.LABEL_SP `DATA_SOURCE_LABEL_SP`, ds.LABEL_PR `DATA_SOURCE_LABEL_PR`,
            sc.CURRENCY_ID `SHIPMENT_CURRENCY_ID`, sc.`CURRENCY_CODE` `SHIPMENT_CURRENCY_CODE`, s.CONVERSION_RATE_TO_USD `SHIPMENT_CONVERSION_RATE_TO_USD`, 
            sc.LABEL_ID `SHIPMENT_CURRENCY_LABEL_ID`, sc.LABEL_EN `SHIPMENT_CURRENCY_LABEL_EN`, sc.LABEL_FR `SHIPMENT_CURRENCY_LABEL_FR`, sc.LABEL_SP `SHIPMENT_CURRENCY_LABEL_SP`, sc.LABEL_PR `SHIPMENT_CURRENCY_LABEL_PR`,
            st.EMERGENCY_ORDER, st.LOCAL_PROCUREMENT, 
            cb.USER_ID `CB_USER_ID`, cb.USERNAME `CB_USERNAME`, s.CREATED_DATE, lmb.USER_ID `LMB_USER_ID`, lmb.USERNAME `LMB_USERNAME`, st.LAST_MODIFIED_DATE, st.ACTIVE,
            bc.CURRENCY_ID `BUDGET_CURRENCY_ID`, bc.CURRENCY_CODE `BUDGET_CURRENCY_CODE`, b.CONVERSION_RATE_TO_USD `BUDGET_CURRENCY_CONVERSION_RATE_TO_USD`, bc.LABEL_ID `BUDGET_CURRENCY_LABEL_ID`, bc.LABEL_EN `BUDGET_CURRENCY_LABEL_EN`, bc.LABEL_FR `BUDGET_CURRENCY_LABEL_FR`, bc.LABEL_SP `BUDGET_CURRENCY_LABEL_SP`, bc.LABEL_PR `BUDGET_CURRENCY_LABEL_PR`, 
            b.BUDGET_ID, b.BUDGET_CODE, b.LABEL_ID `BUDGET_LABEL_ID`, b.LABEL_EN `BUDGET_LABEL_EN`, b.LABEL_FR `BUDGET_LABEL_FR`, b.LABEL_SP `BUDGET_LABEL_SP`, b.LABEL_PR `BUDGET_LABEL_PR`,
            fs.FUNDING_SOURCE_ID, fs.FUNDING_SOURCE_CODE, fs.LABEL_ID `FUNDING_SOURCE_LABEL_ID`, fs.LABEL_EN `FUNDING_SOURCE_LABEL_EN`, fs.LABEL_FR `FUNDING_SOURCE_LABEL_FR`, fs.LABEL_SP `FUNDING_SOURCE_LABEL_SP`, fs.LABEL_PR `FUNDING_SOURCE_LABEL_PR`
        FROM (
            SELECT st.SHIPMENT_ID, MAX(st.VERSION_ID) MAX_VERSION_ID FROM rm_shipment s LEFT JOIN rm_shipment_trans st ON s.SHIPMENT_ID=st.SHIPMENT_ID WHERE (@versiONId=-1 OR st.VERSION_ID<=@versiONId) AND s.PROGRAM_ID=@programId GROUP BY st.SHIPMENT_ID
        ) ts 
        LEFT JOIN rm_shipment s ON ts.SHIPMENT_ID=s.SHIPMENT_ID
        LEFT JOIN rm_shipment_trans st ON ts.SHIPMENT_ID=st.SHIPMENT_ID AND ts.MAX_VERSION_ID=st.VERSION_ID
        LEFT JOIN vw_program p ON s.PROGRAM_ID=p.PROGRAM_ID
        LEFT JOIN vw_procurement_agent pa ON st.PROCUREMENT_AGENT_ID=pa.PROCUREMENT_AGENT_ID
        LEFT JOIN vw_planning_unit pu ON st.PLANNING_UNIT_ID=pu.PLANNING_UNIT_ID
        LEFT JOIN vw_forecasting_unit fu ON pu.FORECASTING_UNIT_ID=fu.FORECASTING_UNIT_ID
        LEFT JOIN vw_product_category pc ON fu.PRODUCT_CATEGORY_ID=pc.PRODUCT_CATEGORY_ID
        LEFT JOIN vw_procurement_unit pru ON st.PROCUREMENT_UNIT_ID=pru.PROCUREMENT_UNIT_ID
        LEFT JOIN vw_supplier su ON st.SUPPLIER_ID=su.SUPPLIER_ID
        LEFT JOIN vw_shipment_status shs ON st.SHIPMENT_STATUS_ID=shs.SHIPMENT_STATUS_ID
        LEFT JOIN vw_data_source ds ON st.DATA_SOURCE_ID=ds.DATA_SOURCE_ID
        LEFT JOIN us_user cb ON s.CREATED_BY=cb.USER_ID
        LEFT JOIN us_user lmb ON st.LAST_MODIFIED_BY=lmb.USER_ID
        LEFT JOIN vw_currency sc ON s.CURRENCY_ID=sc.CURRENCY_ID
        LEFT JOIN vw_budget b ON st.BUDGET_ID=b.BUDGET_ID
        LEFT JOIN vw_currency bc ON b.CURRENCY_ID=bc.CURRENCY_ID
        LEFT JOIN vw_funding_source fs ON st.FUNDING_SOURCE_ID=fs.FUNDING_SOURCE_ID 
        WHERE 
			(@shipmentActive = FALSE OR st.ACTIVE) 
            AND FIND_IN_SET(st.PLANNING_UNIT_ID, @planningUnitIds) 
            AND st.ERP_FLAG=0 
            AND st.ACCOUNT_FLAG 
            AND st.SHIPMENT_STATUS_ID IN (3,4,5,6,9,7)
            AND st.PROCUREMENT_AGENT_ID=@procurementAgentId
            AND IF(st.EXPECTED_DELIVERY_DATE < CURDATE() - INTERVAL 6 MONTH, st.SHIPMENT_STATUS_ID!=7 , st.SHIPMENT_STATUS_ID IN (3,4,5,6,9,7))
    ) st  
    LEFT JOIN rm_shipment_trans_batch_info stbi ON st.SHIPMENT_TRANS_ID = stbi.SHIPMENT_TRANS_ID
    LEFT JOIN rm_program_planning_unit ppu ON st.PLANNING_UNIT_ID=ppu.PLANNING_UNIT_ID AND ppu.PROGRAM_ID=@programId
    LEFT JOIN rm_batch_info bi ON stbi.BATCH_ID=bi.BATCH_ID
    WHERE (@planningUnitActive = FALSE OR ppu.ACTIVE) 
    ORDER BY st.PLANNING_UNIT_ID, COALESCE(st.RECEIVED_DATE, st.EXPECTED_DELIVERY_DATE), bi.EXPIRY_DATE, bi.BATCH_ID; 
END$$

DELIMITER ;
;


USE `fasp`;
DROP procedure IF EXISTS `getNotLinkedQatShipments`;

USE `fasp`;
DROP procedure IF EXISTS `fasp`.`getNotLinkedQatShipments`;
;

DELIMITER $$
USE `fasp`$$
CREATE DEFINER=`faspUser`@`%` PROCEDURE `getNotLinkedQatShipments`(VAR_PROGRAM_ID INT(10), VAR_VERSION_ID INT (10), VAR_PROCUREMENT_AGENT_ID INT (10),VAR_PLANNING_UNIT_IDS TEXT)
BEGIN
    SET @programId = VAR_PROGRAM_ID;
    SET @versionId = VAR_VERSION_ID;
    SET @procurementAgentId = VAR_PROCUREMENT_AGENT_ID;
    SET @shipmentActive = 1;
    SET @planningUnitActive = 1;
    SET @planningUnitIds = VAR_PLANNING_UNIT_IDS;
    SET @sql1 = "";	
    IF @versionId = -1 THEN
        SELECT MAX(pv.VERSION_ID) INTO @versionId FROM rm_program_version pv WHERE pv.PROGRAM_ID=@programId;
    END IF;
      
    SELECT 
        st.*, stbi.SHIPMENT_TRANS_BATCH_INFO_ID, stbi.BATCH_ID, bi.PLANNING_UNIT_ID `BATCH_PLANNING_UNIT_ID`, bi.BATCH_NO, bi.AUTO_GENERATED, bi.EXPIRY_DATE, bi.CREATED_DATE `BATCH_CREATED_DATE`, stbi.BATCH_SHIPMENT_QTY `BATCH_SHIPMENT_QTY` 
    FROM (
        SELECT
            s.SHIPMENT_ID, s.PARENT_SHIPMENT_ID, st.EXPECTED_DELIVERY_DATE, st.PLANNED_DATE, st.SUBMITTED_DATE, st.APPROVED_DATE, st.SHIPPED_DATE, st.ARRIVED_DATE, st.RECEIVED_DATE, st.SHIPMENT_QTY, pu.MULTIPLIER `CONVERSION_FACTOR`, st.RATE, st.PRODUCT_COST, st.FREIGHT_COST, st.SHIPMENT_MODE, s.SUGGESTED_QTY, st.ACCOUNT_FLAG, st.ERP_FLAG, st.ORDER_NO, st.PRIME_LINE_NO, st.VERSION_ID, st.NOTES, st.SHIPMENT_TRANS_ID, 
            p.PROGRAM_ID, p.LABEL_ID `PROGRAM_LABEL_ID`, p.LABEL_EN `PROGRAM_LABEL_EN`, p.LABEL_FR `PROGRAM_LABEL_FR`, p.LABEL_SP `PROGRAM_LABEL_SP`, p.LABEL_PR `PROGRAM_LABEL_PR`,
            pa.PROCUREMENT_AGENT_ID, pa.PROCUREMENT_AGENT_CODE, pa.`COLOR_HTML_CODE`, pa.LABEL_ID `PROCUREMENT_AGENT_LABEL_ID`, pa.LABEL_EN `PROCUREMENT_AGENT_LABEL_EN`, pa.LABEL_FR `PROCUREMENT_AGENT_LABEL_FR`, pa.LABEL_SP `PROCUREMENT_AGENT_LABEL_SP`, pa.LABEL_PR `PROCUREMENT_AGENT_LABEL_PR`,
            pu.PLANNING_UNIT_ID, pu.LABEL_ID `PLANNING_UNIT_LABEL_ID`, pu.LABEL_EN `PLANNING_UNIT_LABEL_EN`, pu.LABEL_FR `PLANNING_UNIT_LABEL_FR`, pu.LABEL_SP `PLANNING_UNIT_LABEL_SP`, pu.LABEL_PR `PLANNING_UNIT_LABEL_PR`,
            fu.FORECASTING_UNIT_ID, fu.LABEL_ID `FORECASTING_UNIT_LABEL_ID`, fu.LABEL_EN `FORECASTING_UNIT_LABEL_EN`, fu.LABEL_FR `FORECASTING_UNIT_LABEL_FR`, fu.LABEL_SP `FORECASTING_UNIT_LABEL_SP`, fu.LABEL_PR `FORECASTING_UNIT_LABEL_PR`,
            pc.PRODUCT_CATEGORY_ID, pc.LABEL_ID `PRODUCT_CATEGORY_LABEL_ID`, pc.LABEL_EN `PRODUCT_CATEGORY_LABEL_EN`, pc.LABEL_FR `PRODUCT_CATEGORY_LABEL_FR`, pc.LABEL_SP `PRODUCT_CATEGORY_LABEL_SP`, pc.LABEL_PR `PRODUCT_CATEGORY_LABEL_PR`,
            pru.PROCUREMENT_UNIT_ID, pru.LABEL_ID `PROCUREMENT_UNIT_LABEL_ID`, pru.LABEL_EN `PROCUREMENT_UNIT_LABEL_EN`, pru.LABEL_FR `PROCUREMENT_UNIT_LABEL_FR`, pru.LABEL_SP `PROCUREMENT_UNIT_LABEL_SP`, pru.LABEL_PR `PROCUREMENT_UNIT_LABEL_PR`,
            su.SUPPLIER_ID, su.LABEL_ID `SUPPLIER_LABEL_ID`, su.LABEL_EN `SUPPLIER_LABEL_EN`, su.LABEL_FR `SUPPLIER_LABEL_FR`, su.LABEL_SP `SUPPLIER_LABEL_SP`, su.LABEL_PR `SUPPLIER_LABEL_PR`,
            shs.SHIPMENT_STATUS_ID, shs.LABEL_ID `SHIPMENT_STATUS_LABEL_ID`, shs.LABEL_EN `SHIPMENT_STATUS_LABEL_EN`, shs.LABEL_FR `SHIPMENT_STATUS_LABEL_FR`, shs.LABEL_SP `SHIPMENT_STATUS_LABEL_SP`, shs.LABEL_PR `SHIPMENT_STATUS_LABEL_PR`,
            ds.DATA_SOURCE_ID, ds.LABEL_ID `DATA_SOURCE_LABEL_ID`, ds.LABEL_EN `DATA_SOURCE_LABEL_EN`, ds.LABEL_FR `DATA_SOURCE_LABEL_FR`, ds.LABEL_SP `DATA_SOURCE_LABEL_SP`, ds.LABEL_PR `DATA_SOURCE_LABEL_PR`,
            sc.CURRENCY_ID `SHIPMENT_CURRENCY_ID`, sc.`CURRENCY_CODE` `SHIPMENT_CURRENCY_CODE`, s.CONVERSION_RATE_TO_USD `SHIPMENT_CONVERSION_RATE_TO_USD`, 
            sc.LABEL_ID `SHIPMENT_CURRENCY_LABEL_ID`, sc.LABEL_EN `SHIPMENT_CURRENCY_LABEL_EN`, sc.LABEL_FR `SHIPMENT_CURRENCY_LABEL_FR`, sc.LABEL_SP `SHIPMENT_CURRENCY_LABEL_SP`, sc.LABEL_PR `SHIPMENT_CURRENCY_LABEL_PR`,
            st.EMERGENCY_ORDER, st.LOCAL_PROCUREMENT, 
            cb.USER_ID `CB_USER_ID`, cb.USERNAME `CB_USERNAME`, s.CREATED_DATE, lmb.USER_ID `LMB_USER_ID`, lmb.USERNAME `LMB_USERNAME`, st.LAST_MODIFIED_DATE, st.ACTIVE,
            bc.CURRENCY_ID `BUDGET_CURRENCY_ID`, bc.CURRENCY_CODE `BUDGET_CURRENCY_CODE`, b.CONVERSION_RATE_TO_USD `BUDGET_CURRENCY_CONVERSION_RATE_TO_USD`, bc.LABEL_ID `BUDGET_CURRENCY_LABEL_ID`, bc.LABEL_EN `BUDGET_CURRENCY_LABEL_EN`, bc.LABEL_FR `BUDGET_CURRENCY_LABEL_FR`, bc.LABEL_SP `BUDGET_CURRENCY_LABEL_SP`, bc.LABEL_PR `BUDGET_CURRENCY_LABEL_PR`, 
            b.BUDGET_ID, b.BUDGET_CODE, b.LABEL_ID `BUDGET_LABEL_ID`, b.LABEL_EN `BUDGET_LABEL_EN`, b.LABEL_FR `BUDGET_LABEL_FR`, b.LABEL_SP `BUDGET_LABEL_SP`, b.LABEL_PR `BUDGET_LABEL_PR`,
            fs.FUNDING_SOURCE_ID, fs.FUNDING_SOURCE_CODE, fs.LABEL_ID `FUNDING_SOURCE_LABEL_ID`, fs.LABEL_EN `FUNDING_SOURCE_LABEL_EN`, fs.LABEL_FR `FUNDING_SOURCE_LABEL_FR`, fs.LABEL_SP `FUNDING_SOURCE_LABEL_SP`, fs.LABEL_PR `FUNDING_SOURCE_LABEL_PR`
        FROM (
            SELECT st.SHIPMENT_ID, MAX(st.VERSION_ID) MAX_VERSION_ID FROM rm_shipment s LEFT JOIN rm_shipment_trans st ON s.SHIPMENT_ID=st.SHIPMENT_ID WHERE (@versiONId=-1 OR st.VERSION_ID<=@versiONId) AND s.PROGRAM_ID=@programId GROUP BY st.SHIPMENT_ID
        ) ts 
        LEFT JOIN rm_shipment s ON ts.SHIPMENT_ID=s.SHIPMENT_ID
        LEFT JOIN rm_shipment_trans st ON ts.SHIPMENT_ID=st.SHIPMENT_ID AND ts.MAX_VERSION_ID=st.VERSION_ID
        LEFT JOIN vw_program p ON s.PROGRAM_ID=p.PROGRAM_ID
        LEFT JOIN vw_procurement_agent pa ON st.PROCUREMENT_AGENT_ID=pa.PROCUREMENT_AGENT_ID
        LEFT JOIN vw_planning_unit pu ON st.PLANNING_UNIT_ID=pu.PLANNING_UNIT_ID
        LEFT JOIN vw_forecasting_unit fu ON pu.FORECASTING_UNIT_ID=fu.FORECASTING_UNIT_ID
        LEFT JOIN vw_product_category pc ON fu.PRODUCT_CATEGORY_ID=pc.PRODUCT_CATEGORY_ID
        LEFT JOIN vw_procurement_unit pru ON st.PROCUREMENT_UNIT_ID=pru.PROCUREMENT_UNIT_ID
        LEFT JOIN vw_supplier su ON st.SUPPLIER_ID=su.SUPPLIER_ID
        LEFT JOIN vw_shipment_status shs ON st.SHIPMENT_STATUS_ID=shs.SHIPMENT_STATUS_ID
        LEFT JOIN vw_data_source ds ON st.DATA_SOURCE_ID=ds.DATA_SOURCE_ID
        LEFT JOIN us_user cb ON s.CREATED_BY=cb.USER_ID
        LEFT JOIN us_user lmb ON st.LAST_MODIFIED_BY=lmb.USER_ID
        LEFT JOIN vw_currency sc ON s.CURRENCY_ID=sc.CURRENCY_ID
        LEFT JOIN vw_budget b ON st.BUDGET_ID=b.BUDGET_ID
        LEFT JOIN vw_currency bc ON b.CURRENCY_ID=bc.CURRENCY_ID
        LEFT JOIN vw_funding_source fs ON st.FUNDING_SOURCE_ID=fs.FUNDING_SOURCE_ID 
        WHERE 
			(@shipmentActive = FALSE OR st.ACTIVE) 
            AND (FIND_IN_SET(st.PLANNING_UNIT_ID, @planningUnitIds) OR @planningUnitIds='') 
            AND st.ERP_FLAG=0 
            AND st.ACCOUNT_FLAG 
            AND st.SHIPMENT_STATUS_ID IN (3,4,5,6,9,7)
            AND st.PROCUREMENT_AGENT_ID=@procurementAgentId
            AND IF(st.EXPECTED_DELIVERY_DATE < CURDATE() - INTERVAL 6 MONTH, st.SHIPMENT_STATUS_ID!=7 , st.SHIPMENT_STATUS_ID IN (3,4,5,6,9,7))
    ) st  
    LEFT JOIN rm_shipment_trans_batch_info stbi ON st.SHIPMENT_TRANS_ID = stbi.SHIPMENT_TRANS_ID
    LEFT JOIN rm_program_planning_unit ppu ON st.PLANNING_UNIT_ID=ppu.PLANNING_UNIT_ID AND ppu.PROGRAM_ID=@programId
    LEFT JOIN rm_batch_info bi ON stbi.BATCH_ID=bi.BATCH_ID
    WHERE (@planningUnitActive = FALSE OR ppu.ACTIVE) 
    ORDER BY st.PLANNING_UNIT_ID, COALESCE(st.RECEIVED_DATE, st.EXPECTED_DELIVERY_DATE), bi.EXPIRY_DATE, bi.BATCH_ID; 
END$$

DELIMITER ;
;


CREATE TABLE `rm_erp_shipment_linking` (
  `ERP_SHIPMENT_LINKING_ID` int unsigned NOT NULL AUTO_INCREMENT,
  `PROGRAM_ID` int unsigned DEFAULT NULL,
  `VERSION_ID` int unsigned NOT NULL,
  `PROCUREMENT_AGENT_ID` int unsigned NOT NULL,
  `PARENT_SHIPMENT_ID` int unsigned NOT NULL,
  `CHILD_SHIPMENT_ID` int unsigned NOT NULL,
  `ERP_PLANNING_UNIT_ID` int unsigned NOT NULL,
  `RO_NO` varchar(45) NOT NULL,
  `RO_PRIME_LINE_NO` varchar(45) NOT NULL,
  `CONVERSION_FACTOR` decimal(16,4) unsigned NOT NULL,
  `ACTIVE` tinyint unsigned NOT NULL,
  `CREATED_DATE` datetime NOT NULL,
  `CREATED_BY` int unsigned NOT NULL,
  `LAST_MODIFIED_DATE` datetime NOT NULL,
  `LAST_MODIFIED_BY` int unsigned NOT NULL,
  PRIMARY KEY (`ERP_SHIPMENT_LINKING_ID`),
  KEY `fk_rm_erp_shipment_linking_procurementAgentId_idx` (`PROCUREMENT_AGENT_ID`),
  KEY `fk_rm_erp_shipment_linking_shipmentId_idx` (`PARENT_SHIPMENT_ID`),
  KEY `fk_rm_erp_shipment_linking_createdBy_idx` (`CREATED_BY`),
  KEY `fk_rm_erp_shipment_linking_lastModifiedBy_idx` (`LAST_MODIFIED_BY`),
  KEY `fk_rm_erp_shipment_linking_planningUnitId_idx` (`ERP_PLANNING_UNIT_ID`),
  KEY `fk_rm_erp_shipment_linking_childShipmentId_idx` (`CHILD_SHIPMENT_ID`),
  KEY `fk_rm_erp_shipment_linking_programId_idx` (`PROGRAM_ID`),
  CONSTRAINT `fk_rm_erp_shipment_linking_childShipment` FOREIGN KEY (`CHILD_SHIPMENT_ID`) REFERENCES `rm_shipment` (`SHIPMENT_ID`),
  CONSTRAINT `fk_rm_erp_shipment_linking_createdBy` FOREIGN KEY (`CREATED_BY`) REFERENCES `us_user` (`USER_ID`),
  CONSTRAINT `fk_rm_erp_shipment_linking_lastModifiedBy` FOREIGN KEY (`LAST_MODIFIED_BY`) REFERENCES `us_user` (`USER_ID`),
  CONSTRAINT `fk_rm_erp_shipment_linking_parentShipment` FOREIGN KEY (`PARENT_SHIPMENT_ID`) REFERENCES `rm_shipment` (`SHIPMENT_ID`),
  CONSTRAINT `fk_rm_erp_shipment_linking_planningUnitId` FOREIGN KEY (`ERP_PLANNING_UNIT_ID`) REFERENCES `rm_planning_unit` (`PLANNING_UNIT_ID`),
  CONSTRAINT `fk_rm_erp_shipment_linking_procurementAgentId` FOREIGN KEY (`PROCUREMENT_AGENT_ID`) REFERENCES `rm_procurement_agent` (`PROCUREMENT_AGENT_ID`),
  CONSTRAINT `fk_rm_erp_shipment_linking_programId` FOREIGN KEY (`PROGRAM_ID`) REFERENCES `rm_program` (`PROGRAM_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;


USE `fasp`;
DROP procedure IF EXISTS `getNotLinkedQatShipments`;

USE `fasp`;
DROP procedure IF EXISTS `fasp`.`getNotLinkedQatShipments`;
;

DELIMITER $$
USE `fasp`$$
CREATE DEFINER=`faspUser`@`%` PROCEDURE `getNotLinkedQatShipments`(VAR_PROGRAM_ID INT(10), VAR_VERSION_ID INT (10), VAR_PROCUREMENT_AGENT_ID INT (10),VAR_PLANNING_UNIT_IDS TEXT)
BEGIN
    SET @programId = VAR_PROGRAM_ID;
    SET @versionId = VAR_VERSION_ID;
    SET @procurementAgentId = VAR_PROCUREMENT_AGENT_ID;
    SET @shipmentActive = 1;
    SET @planningUnitActive = 1;
    SET @planningUnitIds = VAR_PLANNING_UNIT_IDS;
    SET @sql1 = "";	
    IF @versionId = -1 THEN
        SELECT MAX(pv.VERSION_ID) INTO @versionId FROM rm_program_version pv WHERE pv.PROGRAM_ID=@programId;
    END IF;
      
    SELECT 
        st.*, stbi.SHIPMENT_TRANS_BATCH_INFO_ID, stbi.BATCH_ID, bi.PLANNING_UNIT_ID `BATCH_PLANNING_UNIT_ID`, bi.BATCH_NO, bi.AUTO_GENERATED, bi.EXPIRY_DATE, bi.CREATED_DATE `BATCH_CREATED_DATE`, stbi.BATCH_SHIPMENT_QTY `BATCH_SHIPMENT_QTY` 
    FROM (
        SELECT
            s.SHIPMENT_ID, s.PARENT_SHIPMENT_ID, st.EXPECTED_DELIVERY_DATE, st.PLANNED_DATE, st.SUBMITTED_DATE, st.APPROVED_DATE, st.SHIPPED_DATE, st.ARRIVED_DATE, st.RECEIVED_DATE, st.SHIPMENT_QTY, pu.MULTIPLIER `CONVERSION_FACTOR`, st.RATE, st.PRODUCT_COST, st.FREIGHT_COST, st.SHIPMENT_MODE, s.SUGGESTED_QTY, st.ACCOUNT_FLAG, st.ERP_FLAG, st.ORDER_NO, st.PRIME_LINE_NO, st.VERSION_ID, st.NOTES, st.SHIPMENT_TRANS_ID, 
            p.PROGRAM_ID, p.LABEL_ID `PROGRAM_LABEL_ID`, p.LABEL_EN `PROGRAM_LABEL_EN`, p.LABEL_FR `PROGRAM_LABEL_FR`, p.LABEL_SP `PROGRAM_LABEL_SP`, p.LABEL_PR `PROGRAM_LABEL_PR`,
            pa.PROCUREMENT_AGENT_ID, pa.PROCUREMENT_AGENT_CODE, pa.`COLOR_HTML_CODE`, pa.LABEL_ID `PROCUREMENT_AGENT_LABEL_ID`, pa.LABEL_EN `PROCUREMENT_AGENT_LABEL_EN`, pa.LABEL_FR `PROCUREMENT_AGENT_LABEL_FR`, pa.LABEL_SP `PROCUREMENT_AGENT_LABEL_SP`, pa.LABEL_PR `PROCUREMENT_AGENT_LABEL_PR`,
            pu.PLANNING_UNIT_ID, pu.LABEL_ID `PLANNING_UNIT_LABEL_ID`, pu.LABEL_EN `PLANNING_UNIT_LABEL_EN`, pu.LABEL_FR `PLANNING_UNIT_LABEL_FR`, pu.LABEL_SP `PLANNING_UNIT_LABEL_SP`, pu.LABEL_PR `PLANNING_UNIT_LABEL_PR`,
            fu.FORECASTING_UNIT_ID, fu.LABEL_ID `FORECASTING_UNIT_LABEL_ID`, fu.LABEL_EN `FORECASTING_UNIT_LABEL_EN`, fu.LABEL_FR `FORECASTING_UNIT_LABEL_FR`, fu.LABEL_SP `FORECASTING_UNIT_LABEL_SP`, fu.LABEL_PR `FORECASTING_UNIT_LABEL_PR`,
            pc.PRODUCT_CATEGORY_ID, pc.LABEL_ID `PRODUCT_CATEGORY_LABEL_ID`, pc.LABEL_EN `PRODUCT_CATEGORY_LABEL_EN`, pc.LABEL_FR `PRODUCT_CATEGORY_LABEL_FR`, pc.LABEL_SP `PRODUCT_CATEGORY_LABEL_SP`, pc.LABEL_PR `PRODUCT_CATEGORY_LABEL_PR`,
            pru.PROCUREMENT_UNIT_ID, pru.LABEL_ID `PROCUREMENT_UNIT_LABEL_ID`, pru.LABEL_EN `PROCUREMENT_UNIT_LABEL_EN`, pru.LABEL_FR `PROCUREMENT_UNIT_LABEL_FR`, pru.LABEL_SP `PROCUREMENT_UNIT_LABEL_SP`, pru.LABEL_PR `PROCUREMENT_UNIT_LABEL_PR`,
            su.SUPPLIER_ID, su.LABEL_ID `SUPPLIER_LABEL_ID`, su.LABEL_EN `SUPPLIER_LABEL_EN`, su.LABEL_FR `SUPPLIER_LABEL_FR`, su.LABEL_SP `SUPPLIER_LABEL_SP`, su.LABEL_PR `SUPPLIER_LABEL_PR`,
            shs.SHIPMENT_STATUS_ID, shs.LABEL_ID `SHIPMENT_STATUS_LABEL_ID`, shs.LABEL_EN `SHIPMENT_STATUS_LABEL_EN`, shs.LABEL_FR `SHIPMENT_STATUS_LABEL_FR`, shs.LABEL_SP `SHIPMENT_STATUS_LABEL_SP`, shs.LABEL_PR `SHIPMENT_STATUS_LABEL_PR`,
            ds.DATA_SOURCE_ID, ds.LABEL_ID `DATA_SOURCE_LABEL_ID`, ds.LABEL_EN `DATA_SOURCE_LABEL_EN`, ds.LABEL_FR `DATA_SOURCE_LABEL_FR`, ds.LABEL_SP `DATA_SOURCE_LABEL_SP`, ds.LABEL_PR `DATA_SOURCE_LABEL_PR`,
            sc.CURRENCY_ID `SHIPMENT_CURRENCY_ID`, sc.`CURRENCY_CODE` `SHIPMENT_CURRENCY_CODE`, s.CONVERSION_RATE_TO_USD `SHIPMENT_CONVERSION_RATE_TO_USD`, 
            sc.LABEL_ID `SHIPMENT_CURRENCY_LABEL_ID`, sc.LABEL_EN `SHIPMENT_CURRENCY_LABEL_EN`, sc.LABEL_FR `SHIPMENT_CURRENCY_LABEL_FR`, sc.LABEL_SP `SHIPMENT_CURRENCY_LABEL_SP`, sc.LABEL_PR `SHIPMENT_CURRENCY_LABEL_PR`,
            st.EMERGENCY_ORDER, st.LOCAL_PROCUREMENT, 
            cb.USER_ID `CB_USER_ID`, cb.USERNAME `CB_USERNAME`, s.CREATED_DATE, lmb.USER_ID `LMB_USER_ID`, lmb.USERNAME `LMB_USERNAME`, st.LAST_MODIFIED_DATE, st.ACTIVE,
            bc.CURRENCY_ID `BUDGET_CURRENCY_ID`, bc.CURRENCY_CODE `BUDGET_CURRENCY_CODE`, b.CONVERSION_RATE_TO_USD `BUDGET_CURRENCY_CONVERSION_RATE_TO_USD`, bc.LABEL_ID `BUDGET_CURRENCY_LABEL_ID`, bc.LABEL_EN `BUDGET_CURRENCY_LABEL_EN`, bc.LABEL_FR `BUDGET_CURRENCY_LABEL_FR`, bc.LABEL_SP `BUDGET_CURRENCY_LABEL_SP`, bc.LABEL_PR `BUDGET_CURRENCY_LABEL_PR`, 
            b.BUDGET_ID, b.BUDGET_CODE, b.LABEL_ID `BUDGET_LABEL_ID`, b.LABEL_EN `BUDGET_LABEL_EN`, b.LABEL_FR `BUDGET_LABEL_FR`, b.LABEL_SP `BUDGET_LABEL_SP`, b.LABEL_PR `BUDGET_LABEL_PR`,
            fs.FUNDING_SOURCE_ID, fs.FUNDING_SOURCE_CODE, fs.LABEL_ID `FUNDING_SOURCE_LABEL_ID`, fs.LABEL_EN `FUNDING_SOURCE_LABEL_EN`, fs.LABEL_FR `FUNDING_SOURCE_LABEL_FR`, fs.LABEL_SP `FUNDING_SOURCE_LABEL_SP`, fs.LABEL_PR `FUNDING_SOURCE_LABEL_PR`
        FROM (
            SELECT st.SHIPMENT_ID, MAX(st.VERSION_ID) MAX_VERSION_ID FROM rm_shipment s LEFT JOIN rm_shipment_trans st ON s.SHIPMENT_ID=st.SHIPMENT_ID WHERE (@versiONId=-1 OR st.VERSION_ID<=@versiONId) AND s.PROGRAM_ID=@programId GROUP BY st.SHIPMENT_ID
        ) ts 
        LEFT JOIN rm_shipment s ON ts.SHIPMENT_ID=s.SHIPMENT_ID
        LEFT JOIN rm_shipment_trans st ON ts.SHIPMENT_ID=st.SHIPMENT_ID AND ts.MAX_VERSION_ID=st.VERSION_ID
        LEFT JOIN vw_program p ON s.PROGRAM_ID=p.PROGRAM_ID
        LEFT JOIN vw_procurement_agent pa ON st.PROCUREMENT_AGENT_ID=pa.PROCUREMENT_AGENT_ID
        LEFT JOIN vw_planning_unit pu ON st.PLANNING_UNIT_ID=pu.PLANNING_UNIT_ID
        LEFT JOIN vw_forecasting_unit fu ON pu.FORECASTING_UNIT_ID=fu.FORECASTING_UNIT_ID
        LEFT JOIN vw_product_category pc ON fu.PRODUCT_CATEGORY_ID=pc.PRODUCT_CATEGORY_ID
        LEFT JOIN vw_procurement_unit pru ON st.PROCUREMENT_UNIT_ID=pru.PROCUREMENT_UNIT_ID
        LEFT JOIN vw_supplier su ON st.SUPPLIER_ID=su.SUPPLIER_ID
        LEFT JOIN vw_shipment_status shs ON st.SHIPMENT_STATUS_ID=shs.SHIPMENT_STATUS_ID
        LEFT JOIN vw_data_source ds ON st.DATA_SOURCE_ID=ds.DATA_SOURCE_ID
        LEFT JOIN us_user cb ON s.CREATED_BY=cb.USER_ID
        LEFT JOIN us_user lmb ON st.LAST_MODIFIED_BY=lmb.USER_ID
        LEFT JOIN vw_currency sc ON s.CURRENCY_ID=sc.CURRENCY_ID
        LEFT JOIN vw_budget b ON st.BUDGET_ID=b.BUDGET_ID
        LEFT JOIN vw_currency bc ON b.CURRENCY_ID=bc.CURRENCY_ID
        LEFT JOIN vw_funding_source fs ON st.FUNDING_SOURCE_ID=fs.FUNDING_SOURCE_ID 
        WHERE 
			(@shipmentActive = FALSE OR st.ACTIVE) 
            AND (FIND_IN_SET(st.PLANNING_UNIT_ID, @planningUnitIds) OR @planningUnitIds='') 
            AND st.ERP_FLAG=0 
            AND st.ACCOUNT_FLAG 
            AND st.SHIPMENT_STATUS_ID IN (3,4,5,6,9,7) 
            AND st.PROCUREMENT_AGENT_ID=@procurementAgentId
            AND IF(COALESCE(st.RECEIVED_DATE,st.EXPECTED_DELIVERY_DATE) < CURDATE() - INTERVAL 6 MONTH, st.SHIPMENT_STATUS_ID!=7 , st.SHIPMENT_STATUS_ID IN (3,4,5,6,9,7))
    ) st  
    LEFT JOIN rm_shipment_trans_batch_info stbi ON st.SHIPMENT_TRANS_ID = stbi.SHIPMENT_TRANS_ID
    LEFT JOIN rm_program_planning_unit ppu ON st.PLANNING_UNIT_ID=ppu.PLANNING_UNIT_ID AND ppu.PROGRAM_ID=@programId
    LEFT JOIN rm_batch_info bi ON stbi.BATCH_ID=bi.BATCH_ID
    WHERE (@planningUnitActive = FALSE OR ppu.ACTIVE) 
    ORDER BY st.PLANNING_UNIT_ID, COALESCE(st.RECEIVED_DATE, st.EXPECTED_DELIVERY_DATE), bi.EXPIRY_DATE, bi.BATCH_ID; 
END$$

DELIMITER ;
;


call buildErpOrder(curdate());
call buildErpShipment(curdate());

ALTER TABLE `fasp`.`rm_erp_shipment_linking` 
ADD COLUMN `ORDER_NO` VARCHAR(45) NULL AFTER `LAST_MODIFIED_BY`,
ADD COLUMN `PRIME_LINE_NO` VARCHAR(45) NULL AFTER `ORDER_NO`,
ADD COLUMN `KN_SHIPMENT_NO` VARCHAR(45) NULL AFTER `PRIME_LINE_NO`,
ADD COLUMN `ERP_SHIPMENT_STATUS` VARCHAR(45) NOT NULL AFTER `KN_SHIPMENT_NO`;


DROP TABLE IF EXISTS rm_erp_shipment_linking;
DROP TABLE IF EXISTS rm_shipment_linking_trans;
DROP TABLE IF EXISTS rm_shipment_linking;
CREATE TABLE `rm_shipment_linking` (
  `SHIPMENT_LINKING_ID` int unsigned NOT NULL AUTO_INCREMENT,
  `PROGRAM_ID` int unsigned NOT NULL,
  `PROCUREMENT_AGENT_ID` int unsigned NOT NULL,
  `PARENT_SHIPMENT_ID` int unsigned NOT NULL,
  `CHILD_SHIPMENT_ID` int unsigned NOT NULL,
  `RO_NO` varchar(45) COLLATE utf8_bin NOT NULL,
  `RO_PRIME_LINE_NO` varchar(45) COLLATE utf8_bin NOT NULL,
  `CONVERSION_FACTOR` decimal(16,4) unsigned NOT NULL,
  `CREATED_DATE` datetime NOT NULL,
  `CREATED_BY` int unsigned NOT NULL,
  `LAST_MODIFIED_DATE` datetime NOT NULL,
  `LAST_MODIFIED_BY` int unsigned NOT NULL,
  `ORDER_NO` varchar(45) COLLATE utf8_bin DEFAULT NULL,
  `PRIME_LINE_NO` varchar(45) COLLATE utf8_bin DEFAULT NULL,
  `KN_SHIPMENT_NO` varchar(45) COLLATE utf8_bin DEFAULT NULL,
  `MAX_VERSION_ID` int unsigned NOT NULL,
  PRIMARY KEY (`SHIPMENT_LINKING_ID`),
  KEY `fk_rm_shipment_linking_procurementAgentId_idx` (`PROCUREMENT_AGENT_ID`),
  KEY `fk_rm_shipment_linking_shipmentId_idx` (`PARENT_SHIPMENT_ID`),
  KEY `fk_rm_shipment_linking_createdBy_idx` (`CREATED_BY`),
  KEY `fk_rm_shipment_linking_lastModifiedBy_idx` (`LAST_MODIFIED_BY`),
  KEY `fk_rm_shipment_linking_childShipmentId_idx` (`CHILD_SHIPMENT_ID`),
  KEY `fk_rm_shipment_linking_programId_idx` (`PROGRAM_ID`),
  CONSTRAINT `fk_rm_shipment_linking_childShipment` FOREIGN KEY (`CHILD_SHIPMENT_ID`) REFERENCES `rm_shipment` (`SHIPMENT_ID`),
  CONSTRAINT `fk_rm_shipment_linking_createdBy` FOREIGN KEY (`CREATED_BY`) REFERENCES `us_user` (`USER_ID`),
  CONSTRAINT `fk_rm_shipment_linking_lastModifiedBy` FOREIGN KEY (`LAST_MODIFIED_BY`) REFERENCES `us_user` (`USER_ID`),
  CONSTRAINT `fk_rm_shipment_linking_parentShipment` FOREIGN KEY (`PARENT_SHIPMENT_ID`) REFERENCES `rm_shipment` (`SHIPMENT_ID`),
  CONSTRAINT `fk_rm_shipment_linking_procurementAgentId` FOREIGN KEY (`PROCUREMENT_AGENT_ID`) REFERENCES `rm_procurement_agent` (`PROCUREMENT_AGENT_ID`),
  CONSTRAINT `fk_rm_shipment_linking_programId` FOREIGN KEY (`PROGRAM_ID`) REFERENCES `rm_program` (`PROGRAM_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;


CREATE TABLE `rm_shipment_linking_trans` (
  `SHIPMENT_LINKING_TRANS_ID` int unsigned NOT NULL AUTO_INCREMENT,
  `SHIPMENT_LINKING_ID` int unsigned NOT NULL,
  `ACTIVE` tinyint unsigned not null,
  `LAST_MODIFIED_DATE` datetime NOT NULL,
  `LAST_MODIFIED_BY` int unsigned NOT NULL,
  `VERSION_ID` int unsigned NOT NULL,
  PRIMARY KEY (`SHIPMENT_LINKING_TRANS_ID`),
  KEY `fk_rm_shipment_linking_trans_shipmentLinkingId_idx` (`SHIPMENT_LINKING_ID`),
  KEY `fk_rm_shipment_linking_trans_lastModifiedBy_idx` (`LAST_MODIFIED_BY`),
  CONSTRAINT `fk_rm_shipment_linking_trans_shipmentLinkingId` FOREIGN KEY (`SHIPMENT_LINKING_ID`) REFERENCES `rm_shipment_linking` (`SHIPMENT_LINKING_ID`),
  CONSTRAINT `fk_rm_shipment_linking_trans_lastModifiedBy` FOREIGN KEY (`LAST_MODIFIED_BY`) REFERENCES `us_user` (`USER_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;


USE `fasp`;
DROP procedure IF EXISTS `getShipmentLinkingData`;

USE `fasp`;
DROP procedure IF EXISTS `fasp`.`getShipmentLinkingData`;
;

DELIMITER $$
USE `fasp`$$
CREATE DEFINER=`faspUser`@`localhost` PROCEDURE `getShipmentLinkingData`(PROGRAM_ID INT(10), VERSION_ID INT (10))
BEGIN
    SET @programId = PROGRAM_ID;
    SET @versionId = VERSION_ID;
    IF @versionId = -1 THEN
        SELECT MAX(pv.VERSION_ID) INTO @versionId FROM rm_program_version pv WHERE pv.PROGRAM_ID=@programId;
    END IF;
    
    SELECT 
	sl.SHIPMENT_LINKING_ID, sl.PROGRAM_ID, slt.VERSION_ID,
        pa.PROCUREMENT_AGENT_ID, pa.LABEL_ID `PA_LABEL_ID`, pa.LABEL_EN `PA_LABEL_EN`, pa.LABEL_FR `PA_LABEL_FR`, pa.LABEL_SP `PA_LABEL_SP`, pa.LABEL_PR `PA_LABEL_PR`, pa.PROCUREMENT_AGENT_CODE,
        sl.PARENT_SHIPMENT_ID, sl.CHILD_SHIPMENT_ID, st.PLANNING_UNIT_ID QAT_PLANNING_UNIT_ID,
        pu.PLANNING_UNIT_ID `ERP_PLANNING_UNIT_ID`, pu.LABEL_ID `PU_LABEL_ID`, pu.LABEL_EN `PU_LABEL_EN`, pu.LABEL_FR `PU_LABEL_FR`, pu.LABEL_SP `PU_LABEL_SP`, pu.LABEL_PR `PU_LABEL_PR`,
        sl.RO_NO, sl.RO_PRIME_LINE_NO, sl.ORDER_NO, sl.PRIME_LINE_NO, sl.KN_SHIPMENT_NO, sl.CONVERSION_FACTOR,
        slt.ACTIVE, sl.CREATED_DATE, cb.USER_ID `CB_USER_ID`, cb.USERNAME `CB_USERNAME`, slt.LAST_MODIFIED_DATE, lmb.USER_ID `LMB_USER_ID`, lmb.USERNAME `LMB_USERNAME`
    FROM (
	SELECT sl.SHIPMENT_LINKING_ID, MAX(slt.VERSION_ID) MAX_VERSION_ID FROM rm_shipment_linking sl LEFT JOIN rm_shipment_linking_trans slt ON sl.SHIPMENT_LINKING_ID=slt.SHIPMENT_LINKING_ID WHERE (@versionId=-1 OR slt.VERSION_ID<=@versionId) AND sl.PROGRAM_ID=@programId GROUP BY slt.SHIPMENT_LINKING_ID
    ) ts 
    LEFT JOIN rm_shipment_linking sl ON ts.SHIPMENT_LINKING_ID=sl.SHIPMENT_LINKING_ID
    LEFT JOIN rm_shipment_linking_trans slt ON ts.SHIPMENT_LINKING_ID=slt.SHIPMENT_LINKING_ID AND ts.MAX_VERSION_ID=slt.VERSION_ID
    LEFT JOIN vw_procurement_agent pa on sl.PROCUREMENT_AGENT_ID=pa.PROCUREMENT_AGENT_ID 
    LEFT JOIN rm_erp_order_consolidated eo ON sl.RO_NO=eo.RO_NO AND sl.RO_PRIME_LINE_NO=eo.RO_PRIME_LINE_NO
    LEFT JOIN rm_procurement_agent_planning_unit papu ON papu.PROCUREMENT_AGENT_ID=sl.PROCUREMENT_AGENT_ID AND LEFT(papu.SKU_CODE,12)=eo.PLANNING_UNIT_SKU_CODE
    LEFT JOIN vw_planning_unit pu ON papu.PLANNING_UNIT_ID=pu.PLANNING_UNIT_ID 
    LEFT JOIN rm_shipment s ON sl.PARENT_SHIPMENT_ID=s.SHIPMENT_ID 
    LEFT JOIN rm_shipment_trans st ON s.SHIPMENT_ID=st.SHIPMENT_ID AND s.MAX_VERSION_ID=st.VERSION_ID 
    LEFT JOIN us_user cb ON sl.CREATED_BY=cb.USER_ID 
    LEFT JOIN us_user lmb ON slt.LAST_MODIFIED_BY=lmb.USER_ID;
    
END$$

DELIMITER ;
;



INSERT INTO `fasp`.`ap_static_label`(`STATIC_LABEL_ID`,`LABEL_CODE`,`ACTIVE`) VALUES ( NULL,'static.dataEntry.doNotFollowLatestShipment','1'); 
SELECT MAX(l.STATIC_LABEL_ID) INTO @MAX FROM ap_static_label l ;

INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,1,'Note: Data entry is frozen as the loaded program is not following latest shipment information.');-- en
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,2,'Remarque : La saisie des données est gelée car le programme chargé ne suit pas les dernières informations d`expédition.');-- fr
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,3,'Nota: La entrada de datos se congela porque el programa cargado no sigue la información de envío más reciente.');-- sp
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,4,'Nota: A entrada de dados é congelada porque o programa carregado não segue as informações de envio mais recentes.');-- pr
INSERT INTO `fasp`.`ap_static_label`(`STATIC_LABEL_ID`,`LABEL_CODE`,`ACTIVE`) VALUES ( NULL,'static.loadProgram.loadWithoutLatestShipments','1'); 
SELECT MAX(l.STATIC_LABEL_ID) INTO @MAX FROM ap_static_label l ;

INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,1,'Load without latest shipments');-- en
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,2,'Charger sans dernières expéditions');-- fr
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,3,'Carga sin últimos envíos');-- sp
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,4,'Carregar sem envios mais recentes');-- pr
INSERT INTO `fasp`.`ap_static_label`(`STATIC_LABEL_ID`,`LABEL_CODE`,`ACTIVE`) VALUES ( NULL,'static.mt.selectShipmentOfSamePlanningUnit','1'); 
SELECT MAX(l.STATIC_LABEL_ID) INTO @MAX FROM ap_static_label l ;

INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,1,'Please select shipments with same planning units');-- en
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,2,'Veuillez sélectionner les envois avec les mêmes unités de planification');-- fr
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,3,'Seleccione envíos con las mismas unidades de planificación');-- sp
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,4,'Selecione remessas com as mesmas unidades de planejamento');-- pr
INSERT INTO `fasp`.`ap_static_label`(`STATIC_LABEL_ID`,`LABEL_CODE`,`ACTIVE`) VALUES ( NULL,'static.mt.roNoAndRoLineNo','1'); 
SELECT MAX(l.STATIC_LABEL_ID) INTO @MAX FROM ap_static_label l ;

INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,1,'RO|RO Prime line No');-- en
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,2,'Ligne principale RO|RO Non');-- fr
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,3,'Línea principal RO|RO No');-- sp
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,4,'RO|RO Linha Prime No');-- pr
INSERT INTO `fasp`.`ap_static_label`(`STATIC_LABEL_ID`,`LABEL_CODE`,`ACTIVE`) VALUES ( NULL,'static.mt.orderNoAndPrimeLineNo','1'); 
SELECT MAX(l.STATIC_LABEL_ID) INTO @MAX FROM ap_static_label l ;

INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,1,'Order No|Prime line No');-- en
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,2,'N° de commande|N° de ligne principale');-- fr
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,3,'N.º de pedido|N.º de línea principal');-- sp
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,4,'Nº do pedido | Nº da linha principal');-- pr
INSERT INTO `fasp`.`ap_static_label`(`STATIC_LABEL_ID`,`LABEL_CODE`,`ACTIVE`) VALUES ( NULL,'static.mt.knShipmentNo','1'); 
SELECT MAX(l.STATIC_LABEL_ID) INTO @MAX FROM ap_static_label l ;

INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,1,'KN Shipment No');-- en
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,2,'KN Envoi Non');-- fr
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,3,'Número de envío KN');-- sp
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,4,'N.º de Remessa KN');-- pr
INSERT INTO `fasp`.`ap_static_label`(`STATIC_LABEL_ID`,`LABEL_CODE`,`ACTIVE`) VALUES ( NULL,'static.commitVersion.linkedShipments','1'); 
SELECT MAX(l.STATIC_LABEL_ID) INTO @MAX FROM ap_static_label l ;

INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,1,'Linked Shipment');-- en
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,2,'Envoi lié');-- fr
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,3,'Envío vinculado');-- sp
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,4,'Remessa vinculada');-- pr
INSERT INTO `fasp`.`ap_static_label`(`STATIC_LABEL_ID`,`LABEL_CODE`,`ACTIVE`) VALUES ( NULL,'static.commit.local','1'); 
SELECT MAX(l.STATIC_LABEL_ID) INTO @MAX FROM ap_static_label l ;

INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,1,'Local');-- en
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,2,'Local');-- fr
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,3,'Local');-- sp
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,4,'Local');-- pr
INSERT INTO `fasp`.`ap_static_label`(`STATIC_LABEL_ID`,`LABEL_CODE`,`ACTIVE`) VALUES ( NULL,'static.commit.server','1'); 
SELECT MAX(l.STATIC_LABEL_ID) INTO @MAX FROM ap_static_label l ;

INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,1,'Server');-- en
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,2,'Serveur');-- fr
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,3,'Servidor');-- sp
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,4,'Servidor');-- pr
INSERT INTO `fasp`.`ap_static_label`(`STATIC_LABEL_ID`,`LABEL_CODE`,`ACTIVE`) VALUES ( NULL,'static.commit.erpNo','1'); 
SELECT MAX(l.STATIC_LABEL_ID) INTO @MAX FROM ap_static_label l ;

INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,1,'ERP No');-- en
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,2,'ERP Non');-- fr
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,3,'N.º de ERP');-- sp
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,4,'ERP Não');-- pr
INSERT INTO `fasp`.`ap_static_label`(`STATIC_LABEL_ID`,`LABEL_CODE`,`ACTIVE`) VALUES ( NULL,'static.commit.erpLineNo','1'); 
SELECT MAX(l.STATIC_LABEL_ID) INTO @MAX FROM ap_static_label l ;

INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,1,'ERP Line No');-- en
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,2,'Ligne ERP Non');-- fr
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,3,'Número de línea ERP');-- sp
INSERT INTO ap_static_label_languages VALUES(NULL,@MAX,4,'Linha ERP Nº');-- pr
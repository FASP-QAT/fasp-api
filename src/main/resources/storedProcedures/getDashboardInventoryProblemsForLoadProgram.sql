CREATE DEFINER=`faspUser`@`localhost` PROCEDURE `getDashboardInventoryProblemsForLoadProgram`(VAR_PROGRAM_ID INT, VAR_VERSION_ID INT, VAR_STOP_DATE DATE)
BEGIN

    SET @stopDate = VAR_STOP_DATE;
    SET @startDate = DATE_SUB(CONCAT(LEFT(@stopDate,7),"-01"), INTERVAL 3 MONTH);
    SELECT COUNT(*) into @regionCount FROM rm_program_region pr LEFT JOIN rm_region r ON pr.REGION_ID=r.REGION_ID where pr.PROGRAM_ID=VAR_PROGRAM_ID AND pr.ACTIVE AND r.ACTIVE;
    
    SELECT p2.PLANNING_UNIT_ID, SUM(IF(p2.INVENTORY_COUNT=@regionCount, 1, 0)) `INVENTORY_COUNT`
    FROM (
        SELECT 
            it.INVENTORY_DATE, rcpu.PLANNING_UNIT_ID, COUNT(it.ACTUAL_QTY) `INVENTORY_COUNT`
        FROM (SELECT i.INVENTORY_ID, MAX(it.VERSION_ID) MAX_VERSION_ID FROM rm_inventory i LEFT JOIN rm_inventory_trans it ON i.INVENTORY_ID=it.INVENTORY_ID WHERE i.PROGRAM_ID=VAR_PROGRAM_ID AND it.VERSION_ID<=VAR_VERSION_ID GROUP BY i.INVENTORY_ID) tc 
        LEFT JOIN rm_inventory i ON tc.INVENTORY_ID=i.INVENTORY_ID
        LEFT JOIN rm_inventory_trans it ON tc.INVENTORY_ID=it.INVENTORY_ID AND tc.MAX_VERSION_ID=it.VERSION_ID
        LEFT JOIN rm_realm_country_planning_unit rcpu ON rcpu.REALM_COUNTRY_PLANNING_UNIT_ID=it.REALM_COUNTRY_PLANNING_UNIT_ID
        WHERE it.ACTIVE AND it.INVENTORY_DATE BETWEEN @startDate AND @stopDate AND it.ACTUAL_QTY IS NOT NULL
        GROUP BY rcpu.PLANNING_UNIT_ID, it.INVENTORY_DATE
    ) p2 GROUP BY p2.PLANNING_UNIT_ID; 
END
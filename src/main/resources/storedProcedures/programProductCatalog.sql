CREATE DEFINER=`faspUser`@`localhost` PROCEDURE `programProductCatalog`(VAR_PROGRAM_ID INT(10), VAR_PRODUCT_CATEGORY_ID INT, VAR_TRACER_CATEGORY_ID INT)
BEGIN
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- Report no 1
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    
	-- Program Id must be a valid Program Id, cannot be -1 (Any)
    -- Return the list of Program-Planning Units and their corresponding fields
    -- TracerCategory and ProductCategory are used as Filters for the report and can be = -1 which means Any

	SET @programId = VAR_PROGRAM_ID;
    SET @productCategoryId = VAR_PRODUCT_CATEGORY_ID;
    SET @tracerCategoryId = VAR_TRACER_CATEGORY_ID;
    SET @pcSortOrder = '';
    IF @productCategoryId != -1 THEN
        SELECT pc.SORT_ORDER INTO @pcSortOrder FROM rm_product_category pc WHERE pc.PRODUCT_CATEGORY_ID=@productCategoryId;
    END IF;
	
    SELECT 
		p.PROGRAM_ID, p.PROGRAM_CODE, p.LABEL_ID `PROGRAM_LABEL_ID`, p.LABEL_EN `PROGRAM_LABEL_EN`, p.LABEL_FR `PROGRAM_LABEL_FR`, p.LABEL_SP `PROGRAM_LABEL_SP`, p.LABEL_PR `PROGRAM_LABEL_PR`, 
		pc.PRODUCT_CATEGORY_ID, pc.LABEL_ID `PRODUCT_CATEGORY_LABEL_ID`, pc.LABEL_EN `PRODUCT_CATEGORY_LABEL_EN`, pc.LABEL_Fr `PRODUCT_CATEGORY_LABEL_FR`, pc.LABEL_SP `PRODUCT_CATEGORY_LABEL_SP`, pc.LABEL_PR `PRODUCT_CATEGORY_LABEL_PR`,
		tc.TRACER_CATEGORY_ID, tc.LABEL_ID `TRACER_CATEGORY_LABEL_ID`, tc.LABEL_EN `TRACER_CATEGORY_LABEL_EN`, tc.LABEL_FR `TRACER_CATEGORY_LABEL_FR`, tc.LABEL_SP `TRACER_CATEGORY_LABEL_SP`, tc.LABEL_PR `TRACER_CATEGORY_LABEL_PR`,
		fu.FORECASTING_UNIT_ID, fu.LABEL_ID `FORECASTING_UNIT_LABEL_ID`, fu.LABEL_EN `FORECASTING_UNIT_LABEL_EN`, fu.LABEL_FR `FORECASTING_UNIT_LABEL_FR`, fu.LABEL_SP `FORECASTING_UNIT_LABEL_SP`, fu.LABEL_PR `FORECASTING_UNIT_LABEL_PR`, 
		fu.GENERIC_LABEL_ID `GENERIC_LABEL_ID`, ful.LABEL_EN `GENERIC_LABEL_EN`, ful.LABEL_FR `GENERIC_LABEL_FR`, ful.LABEL_SP `GENERIC_LABEL_SP`, ful.LABEL_PR `GENERIC_LABEL_PR`,
		fuu.UNIT_ID `FUNIT_ID`, fuu.UNIT_CODE `FUNIT_CODE`, fuu.LABEL_ID `FUNIT_LABEL_ID`, fuu.LABEL_EN `FUNIT_LABEL_EN`, fuu.LABEL_FR `FUNIT_LABEL_FR`, fuu.LABEL_SP `FUNIT_LABEL_SP`, fuu.LABEL_PR `FUNIT_LABEL_PR`,
		pu.PLANNING_UNIT_ID, pu.MULTIPLIER `FORECASTING_TO_PLANNING_UNIT_MULTIPLIER`, pu.LABEL_ID `PLANNING_UNIT_LABEL_ID`, pu.LABEL_EN `PLANNING_UNIT_LABEL_EN`, pu.LABEL_FR `PLANNING_UNIT_LABEL_FR`, pu.LABEL_SP `PLANNING_UNIT_LABEL_SP`, pu.LABEL_PR `PLANNING_UNIT_LABEL_PR`,
		puu.UNIT_ID `PUNIT_ID`, puu.UNIT_CODE `PUNIT_CODE`, puu.LABEL_ID `PUNIT_LABEL_ID`, puu.LABEL_EN `PUNIT_LABEL_EN`, puu.LABEL_FR `PUNIT_LABEL_FR`, puu.LABEL_SP `PUNIT_LABEL_SP`, puu.LABEL_PR `PUNIT_LABEL_PR`,
		ppu.MIN_MONTHS_OF_STOCK, ppu.REORDER_FREQUENCY_IN_MONTHS, ppu.CATALOG_PRICE, ppu.SHELF_LIFE, IF(ppu.ACTIVE AND pu.ACTIVE, TRUE, FALSE) `ACTIVE`
	FROM rm_program_planning_unit ppu 
	LEFT JOIN vw_program p ON ppu.PROGRAM_ID=p.PROGRAM_ID
	LEFT JOIN vw_planning_unit pu ON ppu.PLANNING_UNIT_ID=pu.PLANNING_UNIT_ID
	LEFT JOIN vw_forecasting_unit fu ON pu.FORECASTING_UNIT_ID=fu.FORECASTING_UNIT_ID
	LEFT JOIN vw_unit fuu ON fu.UNIT_ID=fuu.UNIT_ID
	LEFT JOIN ap_label ful ON fu.GENERIC_LABEL_ID=ful.LABEL_ID
	LEFT JOIN vw_tracer_category tc ON fu.TRACER_CATEGORY_ID=tc.TRACER_CATEGORY_ID
	LEFT JOIN vw_product_category pc ON fu.PRODUCT_CATEGORY_ID=pc.PRODUCT_CATEGORY_ID
	LEFT JOIN vw_unit puu ON pu.UNIT_ID=puu.UNIT_ID
	WHERE 
		ppu.PROGRAM_ID=@programId AND ppu.ACTIVE AND pu.ACTIVE 
		AND (pc.SORT_ORDER LIKE  CONCAT(@pcSortOrder,'%'))
		AND (tc.TRACER_CATEGORY_ID = @tracerCategoryId OR @tracerCategoryId=-1);

END

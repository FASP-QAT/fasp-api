/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cc.altius.FASP.model.DTO.rowMapper;

import cc.altius.FASP.model.DTO.PrgBudgetDTO;
import cc.altius.FASP.model.DTO.PrgDataSourceDTO;
import cc.altius.FASP.model.DTO.PrgDataSourceTypeDTO;
import cc.altius.FASP.model.DTO.PrgFundingSourceDTO;
import cc.altius.FASP.model.DTO.PrgLabelDTO;
import cc.altius.FASP.model.DTO.PrgLogisticsUnitDTO;
import cc.altius.FASP.model.DTO.PrgManufacturerDTO;
import cc.altius.FASP.model.DTO.PrgPlanningUnitDTO;
import cc.altius.FASP.model.DTO.PrgProcurementAgentDTO;
import cc.altius.FASP.model.DTO.PrgProcurementAgentLogisiticsUnitDTO;
import cc.altius.FASP.model.DTO.PrgRegionDTO;
import cc.altius.FASP.model.DTO.PrgShipmentBudgetDTO;
import cc.altius.FASP.model.DTO.PrgShipmentDTO;
import cc.altius.FASP.model.DTO.PrgShipmentStatusDTO;
import cc.altius.FASP.model.DTO.PrgSubFundingSourceDTO;
import cc.altius.FASP.model.DTO.PrgUnitDTO;
import cc.altius.FASP.model.DTO.PrgUnitTypeDTO;
import java.sql.ResultSet;
import java.sql.SQLException;
import org.springframework.jdbc.core.RowMapper;

/**
 *
 * @author altius
 */
public class PrgShipmentDTORowMapper implements RowMapper<PrgShipmentDTO> {

    @Override
    public PrgShipmentDTO mapRow(ResultSet rs, int i) throws SQLException {
        PrgShipmentDTO shipment = new PrgShipmentDTO();
        shipment.setShipmentId(rs.getInt("SHIPMENT_ID"));
        shipment.setArriveDate(rs.getDate("ARRIVE_DATE"));
        PrgDataSourceDTO shipmentDataSource = new PrgDataSourceDTO();
        shipmentDataSource.setDataSourceId(rs.getInt("DATA_SOURCE_ID"));
        PrgDataSourceTypeDTO shipmentDataSourceType = new PrgDataSourceTypeDTO();
        shipmentDataSourceType.setDataSourceTypeId(rs.getInt("DATA_SOURCE_TYPE_ID"));
        PrgLabelDTO shipmentDataSourceTypeLabel = new PrgLabelDTO();
        shipmentDataSourceTypeLabel.setLabelEn(rs.getString("DATA_SOURCE_TYPE_NAME_EN"));
        shipmentDataSourceTypeLabel.setLabelFr(rs.getString("DATA_SOURCE_TYPE_NAME_FR"));
        shipmentDataSourceTypeLabel.setLabelPr(rs.getString("DATA_SOURCE_TYPE_NAME_PR"));
        shipmentDataSourceTypeLabel.setLabelSp(rs.getString("DATA_SOURCE_TYPE_NAME_SP"));
        shipmentDataSourceType.setLabel(shipmentDataSourceTypeLabel);
        shipmentDataSource.setDataSourceType(shipmentDataSourceType);
        PrgLabelDTO shipmentDataSourceLabel = new PrgLabelDTO();
        shipmentDataSourceLabel.setLabelEn(rs.getString("DATA_SOURCE_NAME_EN"));
        shipmentDataSourceLabel.setLabelFr(rs.getString("DATA_SOURCE_NAME_FR"));
        shipmentDataSourceLabel.setLabelPr(rs.getString("DATA_SOURCE_NAME_PR"));
        shipmentDataSourceLabel.setLabelSp(rs.getString("DATA_SOURCE_NAME_SP"));
        shipmentDataSource.setLabel(shipmentDataSourceLabel);
        shipment.setDataSource(shipmentDataSource);
        shipment.setFrieghtPrice(rs.getDouble("FREIGHT_PRICE"));
        PrgLogisticsUnitDTO shipmentLogisticsUnit = new PrgLogisticsUnitDTO();
        shipmentLogisticsUnit.setHeightQty(rs.getDouble("HEIGHT_QTY"));
        PrgUnitDTO shipmentHeightUnit = new PrgUnitDTO();
        PrgLabelDTO shipmentHeightUnitLabel = new PrgLabelDTO();
        shipmentHeightUnitLabel.setLabelEn(rs.getString("HEIGHT_UNIT_NAME_EN"));
        shipmentHeightUnitLabel.setLabelFr(rs.getString("HEIGHT_UNIT_NAME_FR"));
        shipmentHeightUnitLabel.setLabelPr(rs.getString("HEIGHT_UNIT_NAME_PR"));
        shipmentHeightUnitLabel.setLabelSp(rs.getString("HEIGHT_UNIT_NAME_SP"));
        shipmentHeightUnit.setLabel(shipmentHeightUnitLabel);
        shipmentHeightUnit.setUnitCode(rs.getString("HEIGHT_UNIT_CODE"));
        shipmentHeightUnit.setUnitId(rs.getInt("HEIGHT_UNIT_ID"));
        PrgUnitTypeDTO shipmentHeightUnitType = new PrgUnitTypeDTO();
        PrgLabelDTO shipmentHeightUnitTypeLabel = new PrgLabelDTO();
        shipmentHeightUnitTypeLabel.setLabelEn(rs.getString("HEIGHT_UNIT_TYPE_NAME_EN"));
        shipmentHeightUnitTypeLabel.setLabelFr(rs.getString("HEIGHT_UNIT_TYPE_NAME_FR"));
        shipmentHeightUnitTypeLabel.setLabelPr(rs.getString("HEIGHT_UNIT_TYPE_NAME_PR"));
        shipmentHeightUnitTypeLabel.setLabelSp(rs.getString("HEIGHT_UNIT_TYPE_NAME_SP"));
        shipmentHeightUnitType.setLabel(shipmentHeightUnitTypeLabel);
        shipmentHeightUnitType.setUnitTypeId(rs.getInt("HEIGHT_UNIT_TYPE_ID"));
        shipmentHeightUnit.setUnitType(shipmentHeightUnitType);
        shipmentLogisticsUnit.setHeightUnit(shipmentHeightUnit);
        PrgLabelDTO shipmentLogisticsUnitLabel = new PrgLabelDTO();
        shipmentLogisticsUnitLabel.setLabelEn(rs.getString("LOGISTICS_UNIT_NAME_EN"));
        shipmentLogisticsUnitLabel.setLabelFr(rs.getString("LOGISTICS_UNIT_NAME_FR"));
        shipmentLogisticsUnitLabel.setLabelPr(rs.getString("LOGISTICS_UNIT_NAME_PR"));
        shipmentLogisticsUnitLabel.setLabelSp(rs.getString("LOGISTICS_UNIT_NAME_SP"));
        shipmentLogisticsUnit.setLabel(shipmentLogisticsUnitLabel);
        shipmentLogisticsUnit.setLengthQty(rs.getInt("LENGTH_QTY"));

        PrgUnitDTO shipmentLengthUnit = new PrgUnitDTO();
        PrgLabelDTO shipmentLengthUnitLabel = new PrgLabelDTO();
        shipmentLengthUnitLabel.setLabelEn(rs.getString("LENGTH_UNIT_NAME_EN"));
        shipmentLengthUnitLabel.setLabelFr(rs.getString("LENGTH_UNIT_NAME_FR"));
        shipmentLengthUnitLabel.setLabelPr(rs.getString("LENGTH_UNIT_NAME_PR"));
        shipmentLengthUnitLabel.setLabelSp(rs.getString("LENGTH_UNIT_NAME_SP"));
        shipmentLengthUnit.setLabel(shipmentLengthUnitLabel);
        shipmentLengthUnit.setUnitCode(rs.getString("LENGTH_UNIT_CODE"));
        shipmentLengthUnit.setUnitId(rs.getInt("LENGTH_UNIT_ID"));
        PrgUnitTypeDTO shipmentLengthUnitType = new PrgUnitTypeDTO();
        PrgLabelDTO shipmentLengthUnitTypeLabel = new PrgLabelDTO();
        shipmentLengthUnitTypeLabel.setLabelEn(rs.getString("LENGTH_UNIT_TYPE_NAME_EN"));
        shipmentLengthUnitTypeLabel.setLabelFr(rs.getString("LENGTH_UNIT_TYPE_NAME_FR"));
        shipmentLengthUnitTypeLabel.setLabelPr(rs.getString("LENGTH_UNIT_TYPE_NAME_PR"));
        shipmentLengthUnitTypeLabel.setLabelSp(rs.getString("LENGTH_UNIT_TYPE_NAME_SP"));
        shipmentLengthUnitType.setLabel(shipmentLengthUnitTypeLabel);
        shipmentLengthUnitType.setUnitTypeId(rs.getInt("LENGTH_UNIT_TYPE_ID"));
        shipmentLengthUnit.setUnitType(shipmentLengthUnitType);
        shipmentLogisticsUnit.setLengthUnit(shipmentLengthUnit);
        shipmentLogisticsUnit.setLogisticsUnitId(rs.getInt("LOGISTICS_UNIT_ID"));
        PrgManufacturerDTO shipmentManufacturer = new PrgManufacturerDTO();
        PrgLabelDTO shipmentManufacturerLabel = new PrgLabelDTO();
        shipmentManufacturerLabel.setLabelEn(rs.getString("MANUFACTURER_NAME_EN"));
        shipmentManufacturerLabel.setLabelFr(rs.getString("MANUFACTURER_NAME_FR"));
        shipmentManufacturerLabel.setLabelPr(rs.getString("MANUFACTURER_NAME_PR"));
        shipmentManufacturerLabel.setLabelSp(rs.getString("MANUFACTURER_NAME_SP"));
        shipmentManufacturer.setLabel(shipmentManufacturerLabel);
        shipmentManufacturer.setManufacturerId(rs.getInt("MANUFACTURER_ID"));
        shipmentLogisticsUnit.setManufacturer(shipmentManufacturer);
        PrgPlanningUnitDTO shipmentPlanningUnit = new PrgPlanningUnitDTO();
        PrgLabelDTO shipmentPlanningUnitLabel = new PrgLabelDTO();
        shipmentPlanningUnitLabel.setLabelEn(rs.getString("PLANNING_UNIT_NAME_EN"));
        shipmentPlanningUnitLabel.setLabelFr(rs.getString("PLANNING_UNIT_NAME_FR"));
        shipmentPlanningUnitLabel.setLabelPr(rs.getString("PLANNING_UNIT_NAME_PR"));
        shipmentPlanningUnitLabel.setLabelSp(rs.getString("PLANNING_UNIT_NAME_SP"));
        shipmentPlanningUnit.setLabel(shipmentPlanningUnitLabel);
        shipmentPlanningUnit.setPlanningUnitId(rs.getInt("PLANNING_UNIT_ID"));
        shipmentPlanningUnit.setPrice(rs.getDouble("PRICE"));
        shipmentPlanningUnit.setQtyOfForecastingUnits(rs.getDouble("QTY_OF_FORECASTING_UNITS"));
        PrgUnitDTO shipmentPlanningUnitUnit = new PrgUnitDTO();
        PrgLabelDTO shipmentPlanningUnitUnitLabel = new PrgLabelDTO();
        shipmentPlanningUnitUnitLabel.setLabelEn(rs.getString("PLANNING_UNIT_UNIT_NAME_EN"));
        shipmentPlanningUnitUnitLabel.setLabelFr(rs.getString("PLANNING_UNIT_UNIT_NAME_FR"));
        shipmentPlanningUnitUnitLabel.setLabelPr(rs.getString("PLANNING_UNIT_UNIT_NAME_PR"));
        shipmentPlanningUnitUnitLabel.setLabelSp(rs.getString("PLANNING_UNIT_UNIT_NAME_SP"));
        shipmentPlanningUnitUnit.setLabel(shipmentPlanningUnitUnitLabel);
        shipmentPlanningUnitUnit.setUnitCode(rs.getString("PLANNING_UNIT_UNIT_CODE"));
        shipmentPlanningUnitUnit.setUnitId(rs.getInt("PLANNING_UNIT_UNIT_ID"));

        PrgUnitTypeDTO shipmentPlanningUnitUnitType = new PrgUnitTypeDTO();
        PrgLabelDTO shipmentPlanningUnitUnitTypeLabel = new PrgLabelDTO();
        shipmentPlanningUnitUnitTypeLabel.setLabelEn(rs.getString("PLANNING_UNIT_UNIT_TYPE_NAME_EN"));
        shipmentPlanningUnitUnitTypeLabel.setLabelFr(rs.getString("PLANNING_UNIT_UNIT_TYPE_NAME_FR"));
        shipmentPlanningUnitUnitTypeLabel.setLabelPr(rs.getString("PLANNING_UNIT_UNIT_TYPE_NAME_PR"));
        shipmentPlanningUnitUnitTypeLabel.setLabelSp(rs.getString("PLANNING_UNIT_UNIT_TYPE_NAME_SP"));
        shipmentPlanningUnitUnitType.setLabel(shipmentPlanningUnitUnitTypeLabel);
        shipmentPlanningUnitUnitType.setUnitTypeId(rs.getInt("PLANNING_UNIT_UNIT_TYPE_ID"));
        shipmentPlanningUnitUnit.setUnitType(shipmentPlanningUnitUnitType);
        shipmentPlanningUnit.setUnit(shipmentPlanningUnitUnit);
        shipmentLogisticsUnit.setPlanningUnit(shipmentPlanningUnit);
        shipmentLogisticsUnit.setQtyInEuro1(rs.getDouble("QTY_IN_EURO1"));
        shipmentLogisticsUnit.setQtyInEuro2(rs.getDouble("QTY_IN_EURO2"));
        shipmentLogisticsUnit.setQtyOfPlanningUnits(rs.getDouble("QTY_OF_PLANNING_UNITS"));
        PrgUnitDTO shipmentLogisticsUnitUnit = new PrgUnitDTO();
        PrgLabelDTO shipmentLogisticsUnitUnitLabel = new PrgLabelDTO();
        shipmentLogisticsUnitUnitLabel.setLabelEn(rs.getString("LOGISTICS_UNIT_UNIT_NAME_EN"));
        shipmentLogisticsUnitUnitLabel.setLabelFr(rs.getString("LOGISTICS_UNIT_UNIT_NAME_FR"));
        shipmentLogisticsUnitUnitLabel.setLabelPr(rs.getString("LOGISTICS_UNIT_UNIT_NAME_PR"));
        shipmentLogisticsUnitUnitLabel.setLabelSp(rs.getString("LOGISTICS_UNIT_UNIT_NAME_SP"));
        shipmentLogisticsUnitUnit.setLabel(shipmentLogisticsUnitUnitLabel);
        shipmentLogisticsUnitUnit.setUnitCode(rs.getString("LOGISTICS_UNIT_UNIT_CODE"));
        shipmentLogisticsUnitUnit.setUnitId(rs.getInt("LOGISTICS_UNIT_UNIT_ID"));
        PrgUnitTypeDTO shipmentLogisticsUnitUnitType = new PrgUnitTypeDTO();
        PrgLabelDTO shipmentLogisticsUnitUnitTypeLabel = new PrgLabelDTO();
        shipmentLogisticsUnitUnitTypeLabel.setLabelEn(rs.getString("LOGISTICS_UNIT_UNIT_TYPE_NAME_EN"));
        shipmentLogisticsUnitUnitTypeLabel.setLabelFr(rs.getString("LOGISTICS_UNIT_UNIT_TYPE_NAME_FR"));
        shipmentLogisticsUnitUnitTypeLabel.setLabelPr(rs.getString("LOGISTICS_UNIT_UNIT_TYPE_NAME_PR"));
        shipmentLogisticsUnitUnitTypeLabel.setLabelSp(rs.getString("LOGISTICS_UNIT_UNIT_TYPE_NAME_SP"));
        shipmentLogisticsUnitUnitType.setLabel(shipmentLogisticsUnitUnitTypeLabel);
        shipmentLogisticsUnitUnitType.setUnitTypeId(rs.getInt("LOGISTICS_UNIT_UNIT_TYPE_ID"));
        shipmentLogisticsUnitUnit.setUnitType(shipmentLogisticsUnitUnitType);
        shipmentLogisticsUnit.setUnit(shipmentLogisticsUnitUnit);
        shipmentLogisticsUnit.setVariant(rs.getString("VARIANT"));

        shipmentLogisticsUnit.setWeightQty(rs.getDouble("WEIGHT_QTY"));
        PrgUnitDTO shipmentWeightUnit = new PrgUnitDTO();
        PrgLabelDTO shipmentWeightUnitLabel = new PrgLabelDTO();
        shipmentWeightUnitLabel.setLabelEn(rs.getString("WEIGHT_UNIT_NAME_EN"));
        shipmentWeightUnitLabel.setLabelFr(rs.getString("WEIGHT_UNIT_NAME_FR"));
        shipmentWeightUnitLabel.setLabelPr(rs.getString("WEIGHT_UNIT_NAME_PR"));
        shipmentWeightUnitLabel.setLabelSp(rs.getString("WEIGHT_UNIT_NAME_SP"));
        shipmentWeightUnit.setLabel(shipmentWeightUnitLabel);
        shipmentWeightUnit.setUnitCode(rs.getString("WEIGHT_UNIT_CODE"));
        shipmentWeightUnit.setUnitId(rs.getInt("WEIGHT_UNIT_ID"));
        PrgUnitTypeDTO shipmentWeightUnitType = new PrgUnitTypeDTO();
        PrgLabelDTO shipmentWeightUnitTypeLabel = new PrgLabelDTO();
        shipmentWeightUnitTypeLabel.setLabelEn(rs.getString("WEIGHT_UNIT_TYPE_NAME_EN"));
        shipmentWeightUnitTypeLabel.setLabelFr(rs.getString("WEIGHT_UNIT_TYPE_NAME_FR"));
        shipmentWeightUnitTypeLabel.setLabelPr(rs.getString("WEIGHT_UNIT_TYPE_NAME_PR"));
        shipmentWeightUnitTypeLabel.setLabelSp(rs.getString("WEIGHT_UNIT_TYPE_NAME_SP"));
        shipmentWeightUnitType.setLabel(shipmentWeightUnitTypeLabel);
        shipmentWeightUnitType.setUnitTypeId(rs.getInt("WEIGHT_UNIT_TYPE_ID"));
        shipmentWeightUnit.setUnitType(shipmentWeightUnitType);
        shipmentLogisticsUnit.setWeightUnit(shipmentWeightUnit);
        shipmentLogisticsUnit.setWidthQty(rs.getDouble("WIDTH_QTY"));
        PrgUnitDTO shipmentWidthUnit = new PrgUnitDTO();
        PrgLabelDTO shipmentWidthUnitLabel = new PrgLabelDTO();
        shipmentWidthUnitLabel.setLabelEn(rs.getString("WIDTH_UNIT_NAME_EN"));
        shipmentWidthUnitLabel.setLabelFr(rs.getString("WIDTH_UNIT_NAME_FR"));
        shipmentWidthUnitLabel.setLabelPr(rs.getString("WIDTH_UNIT_NAME_PR"));
        shipmentWidthUnitLabel.setLabelSp(rs.getString("WIDTH_UNIT_NAME_SP"));
        shipmentWidthUnit.setLabel(shipmentWidthUnitLabel);
        shipmentWidthUnit.setUnitCode(rs.getString("WIDTH_UNIT_CODE"));
        shipmentWidthUnit.setUnitId(rs.getInt("WIDTH_UNIT_ID"));
        PrgUnitTypeDTO shipmentWidthUnitType = new PrgUnitTypeDTO();
        PrgLabelDTO shipmentWidthUnitTypeLabel = new PrgLabelDTO();
        shipmentWidthUnitTypeLabel.setLabelEn(rs.getString("WIDTH_UNIT_TYPE_NAME_EN"));
        shipmentWidthUnitTypeLabel.setLabelFr(rs.getString("WIDTH_UNIT_TYPE_NAME_FR"));
        shipmentWidthUnitTypeLabel.setLabelPr(rs.getString("WIDTH_UNIT_TYPE_NAME_PR"));
        shipmentWidthUnitTypeLabel.setLabelSp(rs.getString("WIDTH_UNIT_TYPE_NAME_SP"));
        shipmentWidthUnitType.setLabel(shipmentWidthUnitTypeLabel);
        shipmentWidthUnitType.setUnitTypeId(rs.getInt("WIDTH_UNIT_TYPE_ID"));
        shipmentWidthUnit.setUnitType(shipmentWidthUnitType);
        shipmentLogisticsUnit.setWidthUnit(shipmentWidthUnit);
        shipment.setLogisticsUnit(shipmentLogisticsUnit);
        
        
        shipment.setNotes(rs.getString("NOTES"));
        shipment.setOrderDate(rs.getDate("ORDER_DATE"));
        shipment.setPoroNumber(rs.getString("PO_RO_NUMBER"));
        PrgProcurementAgentDTO procurementAgent = new PrgProcurementAgentDTO();
        PrgLabelDTO procurementAgentLabel = new PrgLabelDTO();
        procurementAgentLabel.setLabelEn(rs.getString("PROCURMENT_AGENT_NAME_EN"));
        procurementAgentLabel.setLabelFr(rs.getString("PROCURMENT_AGENT_NAME_FR"));
        procurementAgentLabel.setLabelPr(rs.getString("PROCURMENT_AGENT_NAME_PR"));
        procurementAgentLabel.setLabelSp(rs.getString("PROCURMENT_AGENT_NAME_SP"));
        procurementAgent.setLabel(procurementAgentLabel);
        procurementAgent.setProcurementAgentId(rs.getInt("PROCUREMENT_AGENT_ID"));
        procurementAgent.setSubmittedToApprovedLeadTime(rs.getInt("SUBMITTED_TO_APPROVED_LEAD_TIME"));
        PrgProcurementAgentLogisiticsUnitDTO procurementAgentLogisiticsUnit = new PrgProcurementAgentLogisiticsUnitDTO();
        procurementAgentLogisiticsUnit.setApprovedToShipLeadTime(rs.getInt("APPROVED_TO_SHIP_LEAD_TIME"));
        procurementAgentLogisiticsUnit.setPrice(rs.getDouble("PRICE"));
        procurementAgentLogisiticsUnit.setProcurementAgentSkuId(rs.getInt("PROCUREMENT_AGENT_SKU_ID"));
        procurementAgentLogisiticsUnit.setSkuCode(rs.getString("SKU_CODE"));
        procurementAgent.setPrgProcurementAgentLogisiticsUnit(procurementAgentLogisiticsUnit);
        shipment.setProcurementAgent(procurementAgent);
        shipment.setQty(rs.getDouble("QTY"));
        shipment.setReceiveDate(rs.getDate("RECEIVE_DATE"));
        PrgRegionDTO shipmentRegion = new PrgRegionDTO();
        shipmentRegion.setCapacityCbm(rs.getDouble("REGION_CAPACITY_CBM"));
        PrgLabelDTO shipmentRegionLabel = new PrgLabelDTO();
        shipmentRegionLabel.setLabelEn(rs.getString("REGION_NAME_EN"));
        shipmentRegionLabel.setLabelFr(rs.getString("REGION_NAME_FR"));
        shipmentRegionLabel.setLabelPr(rs.getString("REGION_NAME_PR"));
        shipmentRegionLabel.setLabelSp(rs.getString("REGION_NAME_SP"));
        shipmentRegion.setLabel(shipmentRegionLabel);
        shipmentRegion.setRegionId(rs.getInt("REGION_ID"));
        shipment.setRegion(shipmentRegion);
        shipment.setShipDate(rs.getDate("SHIP_DATE"));

        PrgShipmentBudgetDTO shipmentBudget = new PrgShipmentBudgetDTO();
        PrgBudgetDTO shipBud = new PrgBudgetDTO();
        shipBud.setBudgetAmount(rs.getDouble("BUD_AMOUNT"));
        shipBud.setBudgetId(rs.getInt("BUD_BUDGET_ID"));
        PrgLabelDTO shipBudLabel = new PrgLabelDTO();
        shipBudLabel.setLabelEn(rs.getString("BUD_NAME_EN"));
        shipBudLabel.setLabelFr(rs.getString("BUD_NAME_FR"));
        shipBudLabel.setLabelPr(rs.getString("BUD_NAME_PR"));
        shipBudLabel.setLabelSp(rs.getString("BUD_NAME_SP"));
        shipBud.setLabel(shipBudLabel);
        shipBud.setStartDate(rs.getDate("BUD_START_DATE"));
        shipBud.setStopDate(rs.getDate("BUD_STOP_DATE"));
        shipmentBudget.setBudget(shipBud);
        shipmentBudget.setBudgetAmount(rs.getDouble("BUDGET_AMOUNT"));
        shipmentBudget.setShipmentBudgetId(rs.getInt("BUDGET_ID"));
        PrgSubFundingSourceDTO shipmentBudgetSubFundingSource = new PrgSubFundingSourceDTO();
        PrgFundingSourceDTO shipmentBudgetFundingSource = new PrgFundingSourceDTO();
        shipmentBudgetFundingSource.setFundingSourceId(rs.getInt("BUDGET_FUNDING_SOURCE_ID"));
        PrgLabelDTO shipmentBudgetFundingSourceLabel = new PrgLabelDTO();
        shipmentBudgetFundingSourceLabel.setLabelEn(rs.getString("BUDGET_FUNDING_SOURCE_NAME_EN"));
        shipmentBudgetFundingSourceLabel.setLabelFr(rs.getString("BUDGET_FUNDING_SOURCE_NAME_FR"));
        shipmentBudgetFundingSourceLabel.setLabelPr(rs.getString("BUDGET_FUNDING_SOURCE_NAME_PR"));
        shipmentBudgetFundingSourceLabel.setLabelSp(rs.getString("BUDGET_FUNDING_SOURCE_NAME_SP"));
        shipmentBudgetFundingSource.setLabel(shipmentBudgetFundingSourceLabel);
        shipmentBudgetSubFundingSource.setFundingSource(shipmentBudgetFundingSource);
        PrgLabelDTO shipmentBudgetSubFundingSourceLabel = new PrgLabelDTO();
        shipmentBudgetSubFundingSourceLabel.setLabelEn(rs.getString("BUDGET_SUB_FUNDING_SOURCE_NAME_EN"));
        shipmentBudgetSubFundingSourceLabel.setLabelFr(rs.getString("BUDGET_SUB_FUNDING_SOURCE_NAME_FR"));
        shipmentBudgetSubFundingSourceLabel.setLabelPr(rs.getString("BUDGET_SUB_FUNDING_SOURCE_NAME_PR"));
        shipmentBudgetSubFundingSourceLabel.setLabelSp(rs.getString("BUDGET_SUB_FUNDING_SOURCE_NAME_SP"));
        shipmentBudgetSubFundingSource.setLabel(shipmentBudgetSubFundingSourceLabel);
        shipmentBudgetSubFundingSource.setSubFundingSourceId(rs.getInt("BUDGET_SUB_FUNDING_SOURCE_ID"));
        shipmentBudget.setSubFundingSource(shipmentBudgetSubFundingSource);
        shipment.setShipmentBudget(shipmentBudget);
        shipment.setShipmentPrice(rs.getDouble("SHIPMENT_PRICE"));
        PrgShipmentStatusDTO shipmentStatus = new PrgShipmentStatusDTO();
        PrgLabelDTO shipmentStatusLabel = new PrgLabelDTO();
        shipmentStatusLabel.setLabelEn(rs.getString("SHIPMENT_STATUS_NAME_EN"));
        shipmentStatusLabel.setLabelFr(rs.getString("SHIPMENT_STATUS_NAME_FR"));
        shipmentStatusLabel.setLabelPr(rs.getString("SHIPMENT_STATUS_NAME_PR"));
        shipmentStatusLabel.setLabelSp(rs.getString("SHIPMENT_STATUS_NAME_SP"));
        shipmentStatus.setLabel(shipmentStatusLabel);
        shipmentStatus.setShipmentStatusId(rs.getInt("SHIPMENT_STATUS_ID"));
        shipment.setShipmentStatus(shipmentStatus);
        shipment.setSuggestedQty(rs.getDouble("SUGGESTED_QTY"));
        
        return shipment;
    }

}
